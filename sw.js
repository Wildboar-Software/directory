(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.3"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.3"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.3"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.3"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:"no-cors"!==e.mode?i||t:void 0})),t&&r&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"9acdc7c53920c2712ad8f7696cbcf571","url":"404.html"},{"revision":"12e24e48eb07386315115993d21b495e","url":"assets/css/styles.6e3b09cd.css"},{"revision":"51ed7b14aa2a916817557d0f29f051ba","url":"assets/js/00a69558.1b8091d1.js"},{"revision":"a349a255fde5ae6de2c4e0db951baa40","url":"assets/js/03e83d11.9f79eab5.js"},{"revision":"9b552c07c8fc875eaa2c152555ed58cb","url":"assets/js/061511b1.9884c784.js"},{"revision":"1d7b5df69fff08645848aa252586158e","url":"assets/js/09aeabed.34e53ede.js"},{"revision":"f9fd26d88fb77cc0be7fb0afff600558","url":"assets/js/0dffb83e.f991008b.js"},{"revision":"0a74dbf6a94950cd67c13cb031ceea97","url":"assets/js/0e384e19.d7b2cfa5.js"},{"revision":"76370417606e0c9362c2edc07b32b266","url":"assets/js/131.610dde73.js"},{"revision":"1daf1754c76bef560e890496ba5ef18d","url":"assets/js/151a2dd0.fde01a0d.js"},{"revision":"80d988cc7e478e0939cb9526f464b731","url":"assets/js/166d740f.10a30616.js"},{"revision":"f9b6e1c22d2edb69834ab7efb8b03948","url":"assets/js/17896441.3525d705.js"},{"revision":"56dc7c93a97a5c5e8eaf9aa369314f63","url":"assets/js/18160eb7.ff863bce.js"},{"revision":"7cb33ae1274aeeec2b329423f67ba543","url":"assets/js/1be78505.61f126e3.js"},{"revision":"e4d189c849c03d94583a73d1c75dd84d","url":"assets/js/1df93b7f.7a849101.js"},{"revision":"bdea9f1d001f3383446ba234f42da2bc","url":"assets/js/1ebd126c.f3a1f7b3.js"},{"revision":"f8e20cc1f86866254669883e6bbc7fa0","url":"assets/js/230.1daacdcd.js"},{"revision":"e021c756b177f074cad3af7ca9d0b635","url":"assets/js/283.8b26e7c1.js"},{"revision":"eae83c8e5a3c95876783171721ab282e","url":"assets/js/2b654a6a.b2c7d0ed.js"},{"revision":"1d6d9fe2d8d4cee44f1c0fb2bee5f38b","url":"assets/js/35a82133.2133472d.js"},{"revision":"64fcfaed0d412568f9cbf7b65f3b35dc","url":"assets/js/3847b3ea.5266a7fc.js"},{"revision":"a7b2cca07f246a52bc267fb7430a8b69","url":"assets/js/38fddab1.d850b3e2.js"},{"revision":"d543462850040b35c5ba4b7dd46a0d88","url":"assets/js/402b7f84.5862c80d.js"},{"revision":"8a0c3c18f10818f74e7b407b5b8f53ea","url":"assets/js/45b5d4a5.2d60ad84.js"},{"revision":"5729cccc1f1234f45f750a2583bb6677","url":"assets/js/5281b7a2.05949cdc.js"},{"revision":"6aa22fe4e79a96e41cb2f56831b0b79d","url":"assets/js/5f0ff442.cab36962.js"},{"revision":"1a615f38562d55a7162264ccb922a07b","url":"assets/js/625b1ed7.509da371.js"},{"revision":"55d94e3abb7930097e908c628d650bb2","url":"assets/js/6476eba6.3da8d473.js"},{"revision":"88e7121d39d4b51b046b4f6fb30768a6","url":"assets/js/64a7a4a8.04a9793c.js"},{"revision":"f7a862001d61e00cd6debefefc4a3a94","url":"assets/js/74b23640.7fa64c00.js"},{"revision":"086fab9fd1c2500566c169142137d78f","url":"assets/js/935f2afb.12a95822.js"},{"revision":"f4e0d782ffdcfd61a9c41467317ac1f3","url":"assets/js/96fdc418.5a6eeecd.js"},{"revision":"c640f328160dce2bb26a3b524b9732e5","url":"assets/js/972.466a056b.js"},{"revision":"aef70c4676f9a53a7f72dabb58abc401","url":"assets/js/9737244b.002489cd.js"},{"revision":"8a82c43d35b3f16e78dd403a663e9020","url":"assets/js/9a843fde.507e0884.js"},{"revision":"6b17b50e3cdd901bf4459d5492ca4bb4","url":"assets/js/a0a062d9.6bda2225.js"},{"revision":"f161c415ec2bdcbd9aa900cba56e435c","url":"assets/js/b48a11ff.5195cb6f.js"},{"revision":"c4a3cd5e4ecd8305d75dc3500467b2eb","url":"assets/js/b8039f88.622326a8.js"},{"revision":"b5cbcd79eef234dfb7407409b8ccffa9","url":"assets/js/bce87e4b.e848a544.js"},{"revision":"ad9116be543f157a57e3ec3ed80af06f","url":"assets/js/c0aaac61.e20b1072.js"},{"revision":"131937d4129b512791e3b5e6a134163c","url":"assets/js/c1ac2d5f.73e55deb.js"},{"revision":"64ae31f46739610f5a86e7f582e8cfbb","url":"assets/js/c36c34fa.7eeba34a.js"},{"revision":"26d29fda2e981c3fabb565c3da9e5be5","url":"assets/js/c9d2e1ff.ac6fdc5c.js"},{"revision":"35bd2db69c200a8edfe8758440fcdaf1","url":"assets/js/cd9a430b.8ae0f05e.js"},{"revision":"9b03d442970ec9f128172558db6df02e","url":"assets/js/d9e16301.ea29dece.js"},{"revision":"58df62bb37db262180acc2d59b033b0f","url":"assets/js/df4661b7.eefe8d98.js"},{"revision":"ece56996f787aaac104e63c80bdf860c","url":"assets/js/e44d3765.bf0ef145.js"},{"revision":"91eb4c087f60d88b71c64edaa5a2c870","url":"assets/js/e8193bc1.42ce14cd.js"},{"revision":"d6ecaffe214069934998a24eaa0af2c5","url":"assets/js/ff001273.2d53be4e.js"},{"revision":"32d35c0e589bc5363f7a5cc74ade0fec","url":"assets/js/main.441afdfd.js"},{"revision":"ed95a2b2164bb4f8feb4c41ccbba9666","url":"assets/js/runtime~main.6f432426.js"},{"revision":"193505c6e445595b932082cfec7f7a4c","url":"docs/administration/index.html"},{"revision":"367870824d69ba4fed5acc36903f51e2","url":"docs/advice/index.html"},{"revision":"7ed1ef7f1d5cb4eb236c1201e8b52d5a","url":"docs/architecture/index.html"},{"revision":"5887779581ff991c686ccc0b42c85f2f","url":"docs/asn1/index.html"},{"revision":"1832c80e35758c8ae981a114d5f12758","url":"docs/authentication/index.html"},{"revision":"10d0c5b03cd7477445cc647eb9521674","url":"docs/authorization/index.html"},{"revision":"e855c1f2731e737b83246396b8128d38","url":"docs/client-config/index.html"},{"revision":"1c449e0dcec1c5a38708829772d590e4","url":"docs/conformance/index.html"},{"revision":"e2cd5bebcc3d903ca7a2163eb37d2524","url":"docs/database/index.html"},{"revision":"6f7057289c840bdd8bb921f756c1a2e7","url":"docs/demo/index.html"},{"revision":"dde113ea9a4b753b74ecf11ba221823a","url":"docs/deviations-nuances/index.html"},{"revision":"c3ddd43aeaf47b4cec775e51664bd6be","url":"docs/distributed/index.html"},{"revision":"ae301a67e2c83124b617d4f3074602cf","url":"docs/dit/index.html"},{"revision":"147901922e0812315868773dc023c414","url":"docs/docs/index.html"},{"revision":"21d9304ebdbfe09b194b219a67b0bbea","url":"docs/env/index.html"},{"revision":"58e75da1e78918e252acfbe07924cc5d","url":"docs/information-disclosure/index.html"},{"revision":"fa8f57dd3d925c184b6f0c5decd6f12e","url":"docs/intro/index.html"},{"revision":"a6730c8dd9e82dc07f8d69f28ed9dac4","url":"docs/logging-monitoring/index.html"},{"revision":"2e6028b82ec6a55f7d99df4c4bdb225e","url":"docs/networking/index.html"},{"revision":"2f16bf548418e0aba3a3844e0e29b7aa","url":"docs/online-pki/index.html"},{"revision":"e5a4b7954551b377479cc53f7fbf537a","url":"docs/opbinding/index.html"},{"revision":"647fe0e8b9446785f38886f6f26dc8b0","url":"docs/roadmap/index.html"},{"revision":"4b06dc336decb729f405fd79627c0d81","url":"docs/schema/index.html"},{"revision":"7f069d9fda123cc911c87db36d67e015","url":"docs/setup/index.html"},{"revision":"1d84605b9c01638c54533fd0570c5e25","url":"docs/signing/index.html"},{"revision":"a12d6d5a4ba6ac4ce41bd56503bb3f78","url":"docs/specs/index.html"},{"revision":"d96afb392f6ee3b00190dc3939a00d5c","url":"docs/studio/index.html"},{"revision":"982e8015a7b5b5b89e2415bde718f5c2","url":"docs/support/index.html"},{"revision":"f9500f3eca1e3f6033d5c376123e46f7","url":"docs/telemetry/index.html"},{"revision":"d9243c1d6f52edc166ee455392d30313","url":"docs/tls/index.html"},{"revision":"5194b4de9526c73fe52e05b2bec9cd45","url":"docs/tutorial01/index.html"},{"revision":"c002b08758d0836e0899ec3e3089c596","url":"docs/tutorial02/index.html"},{"revision":"c5179d379e8cb0476a795592bbe923b1","url":"docs/usage/index.html"},{"revision":"2cb22c4c0083b98e831407a7f8132eda","url":"docs/uses/index.html"},{"revision":"3311547460432f996a8c6f46f8d9946d","url":"docs/webadmin/index.html"},{"revision":"917fb9990b7c3a86b703be4b28c90ae6","url":"docs/why-not-ldap/index.html"},{"revision":"918a290a065dd1cf2820ba0ab98b7fa2","url":"docs/x500cli/index.html"},{"revision":"35b36427d28dc3f2427d68dbc563958e","url":"index.html"},{"revision":"4bb72b5a821f4c84acc81d05ea9eec35","url":"manifest.json"},{"revision":"b5eef8fcb6570f0ade2f691a143d1736","url":"img/boar-head-rune-circle.svg"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"4343e07bf942aefb5f334501958fbc0e","url":"img/favicon.ico"},{"revision":"aa4fa2cdc39d33f2ee3b8f245b6d30d9","url":"img/logo.svg"},{"revision":"b9d9189ed8f8dd58e70d9f8b3f693b3e","url":"img/tutorial/docsVersionDropdown.png"},{"revision":"c14bff79aafafca0957ccc34ee026e2c","url":"img/tutorial/localeDropdown.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();