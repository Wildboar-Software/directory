(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.1"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.1"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.1"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.1"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"a789055b3aa7aee2deded61fc8cf465c","url":"404.html"},{"revision":"c0c9ce353142323ebab0a7ba65be9008","url":"assets/css/styles.aaaf787b.css"},{"revision":"c3acac0f6c8b375a71cd6719741aa435","url":"assets/js/00a69558.4e4ec68b.js"},{"revision":"f4847cdf19979b40bef5867e66d7affb","url":"assets/js/03e83d11.f35b2303.js"},{"revision":"0733bd3646e649b647ce4e7c2bfdb993","url":"assets/js/061511b1.08c2bac1.js"},{"revision":"1f1d5c5b57264fe04f0611fe32ec9b40","url":"assets/js/09aeabed.38f6c99c.js"},{"revision":"e1cc0723d1ed82302c0eda154e56466e","url":"assets/js/0dffb83e.9fe46c65.js"},{"revision":"716a2a7bce8df2e7e725e0b81fa30bf2","url":"assets/js/0e384e19.04f49cd3.js"},{"revision":"bc8048561e1ade389c88c620447e37d4","url":"assets/js/131.c0b7ec19.js"},{"revision":"7fbb55f988c5aaf5abb92030a58b93a4","url":"assets/js/151a2dd0.d9600530.js"},{"revision":"b547623592d096c463a125a9bdb31339","url":"assets/js/17896441.7d772bf3.js"},{"revision":"38f59f4cf9fe6320ac646a6db55c0e26","url":"assets/js/18160eb7.e433baca.js"},{"revision":"527c835e60f728d605d36baec982215c","url":"assets/js/1be78505.b5ea8244.js"},{"revision":"f17107247dea2de61833ee22ca2aef53","url":"assets/js/1df93b7f.4693d7a3.js"},{"revision":"a195939062e8f9617d9bffcb2c2bc109","url":"assets/js/1ebd126c.e39d6da5.js"},{"revision":"184fb673537daf0737b4f4627f3c3cd9","url":"assets/js/230.13a5b020.js"},{"revision":"7da6ccde2014e1b15aa862d84e49406a","url":"assets/js/283.37058774.js"},{"revision":"3a72128127c40aa04bfc9afc7e75d4d7","url":"assets/js/2b654a6a.397c9d7b.js"},{"revision":"bd13da2b67576deaf12835d9d6a2f24f","url":"assets/js/35a82133.6ea0b36a.js"},{"revision":"9307cf676d8dfd561b1b8c2bab6b2034","url":"assets/js/3847b3ea.169fab75.js"},{"revision":"c2c4b41938f5dd2518f4f6fc62c5880a","url":"assets/js/38fddab1.00e503b6.js"},{"revision":"7c2a085a8943e1bf3c1db4c751a48b79","url":"assets/js/402b7f84.6c5ba2cc.js"},{"revision":"67e991239a3db67ce037f7de6a7f7bbb","url":"assets/js/45b5d4a5.f5df7155.js"},{"revision":"eba9415f87c816b442ed0f9afbd1c18f","url":"assets/js/5281b7a2.53d8114c.js"},{"revision":"511db0eefe938cb9d3d788a2697e7d59","url":"assets/js/5f0ff442.9532b519.js"},{"revision":"206de7ee46543fcaef31ef7df8d42243","url":"assets/js/625b1ed7.b42e9410.js"},{"revision":"d3523fac0f256767c3024361f87b1d9c","url":"assets/js/6476eba6.c2070f9b.js"},{"revision":"48999a5109866403215133af7fc01d59","url":"assets/js/64a7a4a8.d1b4eee1.js"},{"revision":"89139252aa3d05a31e78ef53e52a522a","url":"assets/js/74b23640.685f61c8.js"},{"revision":"bd37ac43c704cd40e9cee95dde73f71b","url":"assets/js/818.c6c1cd57.js"},{"revision":"d95f1a5df5d9dfb2569eacc78e4b01dd","url":"assets/js/935f2afb.cfe8be5e.js"},{"revision":"81b1682124e93717dabaddfbc2048dd8","url":"assets/js/96fdc418.106c265f.js"},{"revision":"d88667b346a6f0aa178729f4efe8aa8a","url":"assets/js/9737244b.e6d7ac05.js"},{"revision":"7d48ceea5e6f806727a3092020c3d6ad","url":"assets/js/9a843fde.3ceed74b.js"},{"revision":"da74b99b4654b2401df7c188f61138dc","url":"assets/js/9e4087bc.fb88c8de.js"},{"revision":"dd037a2e33fe2108de6589c6f799cc36","url":"assets/js/a0a062d9.09950fef.js"},{"revision":"23370c0104ba9972d74fbcfb8b7e8fa8","url":"assets/js/b48a11ff.695547a5.js"},{"revision":"d4ad85d86ab3a84f3f26bfdca16d53bb","url":"assets/js/b8039f88.ac1556d5.js"},{"revision":"63f2eb512aaf49f5c239e88af760a8e5","url":"assets/js/bce87e4b.9f0c85ca.js"},{"revision":"2eda692deeb8be32e1359613208e53ab","url":"assets/js/c0aaac61.188dda36.js"},{"revision":"859178a3db3167e47603a4bed5ca1ea1","url":"assets/js/c1ac2d5f.bfe7af42.js"},{"revision":"027d52c51470cbbeac82b0536b7c6f5e","url":"assets/js/c4ad6d3d.57f49e8f.js"},{"revision":"765c2382b5a5ccbd6ca950fbdef654a1","url":"assets/js/c9d2e1ff.5faf6e63.js"},{"revision":"9bed4a2bdc771770af8695a5a76c0e6e","url":"assets/js/cd9a430b.30ede7e1.js"},{"revision":"2ceaade789a55c20dd6dea200e7fab98","url":"assets/js/d9e16301.83cb0527.js"},{"revision":"cda15da3ae7c516937503211f5b77f73","url":"assets/js/df4661b7.13d21bc8.js"},{"revision":"f4590df9995f160bd1417aa1b5f31e26","url":"assets/js/e44d3765.4e2f2c87.js"},{"revision":"3dd1f2b83c94829512f1fccb9d407323","url":"assets/js/e8193bc1.8e8f6a5a.js"},{"revision":"41c53126e77c73063125de9efdf47114","url":"assets/js/ff001273.cdb685bc.js"},{"revision":"707c122fe58c4397926fd179e74dc194","url":"assets/js/main.42ba5da9.js"},{"revision":"5a72be9fa50197778ce561b2d4bca44c","url":"assets/js/runtime~main.33e87db8.js"},{"revision":"2b6bed8225350a384c565398941ae758","url":"blog/archive/index.html"},{"revision":"0cd97aa72ca08afd9b48ce587b1cc3a0","url":"docs/administration/index.html"},{"revision":"a50c25996bc636d90748b79a54d43ce6","url":"docs/advice/index.html"},{"revision":"652ea05137a4f6cffc9808082013764c","url":"docs/architecture/index.html"},{"revision":"3f429f5d3af684958026633b6103f79b","url":"docs/asn1/index.html"},{"revision":"dd665de0551efcdde8a5d731351fe466","url":"docs/authentication/index.html"},{"revision":"bcbc516818821d46d02866f5ffb205a5","url":"docs/authorization/index.html"},{"revision":"4827509981b00dd8d25c56e8ed65f74b","url":"docs/client-config/index.html"},{"revision":"6250aa35077361aab71177941e884286","url":"docs/conformance/index.html"},{"revision":"e9bf6162789c1439da10ca3b3adf196c","url":"docs/database/index.html"},{"revision":"66fa0543a549dfd5fe170931ad641b3b","url":"docs/demo/index.html"},{"revision":"6844c4d8f4c380d6c9398c18c017ad06","url":"docs/deviations-nuances/index.html"},{"revision":"1fcf1b9c4afe252c50f816a79c6b9085","url":"docs/distributed/index.html"},{"revision":"86c7cec4f3c7f52ee8a908e183ab89da","url":"docs/dit/index.html"},{"revision":"4461df2904b73e59a5d582fbf32354ff","url":"docs/docs/index.html"},{"revision":"94133c6b2e41493d1219af9f7adf7cd4","url":"docs/env/index.html"},{"revision":"3af9d441496911ae5c269a3d0b50bfd9","url":"docs/information-disclosure/index.html"},{"revision":"0340b1ee539e3028c42b75e6dd363d4d","url":"docs/intro/index.html"},{"revision":"f8e6ff0c9489661a979691a317ae942a","url":"docs/logging-monitoring/index.html"},{"revision":"2e6acbcf5719a9a10d2d050e8f228597","url":"docs/networking/index.html"},{"revision":"bfda6573488d1a3ea2d11d0230add20d","url":"docs/online-pki/index.html"},{"revision":"57b63435e5d0a592a0e7b8453035d62f","url":"docs/opbinding/index.html"},{"revision":"eb3d6102ae13cf8ccf78cf1888fed464","url":"docs/roadmap/index.html"},{"revision":"87192962d0a12c5a983d8dbecff8b82e","url":"docs/schema/index.html"},{"revision":"2cd0c95b5109592690a45b9393b7c9d6","url":"docs/setup/index.html"},{"revision":"34501ffafce99feb1f6f02ffd6a08443","url":"docs/signing/index.html"},{"revision":"194617032f8203dae26959b8ee27cb7c","url":"docs/specs/index.html"},{"revision":"21ba37bf87433f6e1313ef419efe8531","url":"docs/studio/index.html"},{"revision":"5aa298a737585041e144fb6665e7409f","url":"docs/support/index.html"},{"revision":"ee819620abc617ace53fedf453f2d80a","url":"docs/telemetry/index.html"},{"revision":"d4e04d19ad18d1f72c3323a00dcd3c89","url":"docs/tls/index.html"},{"revision":"874c157eade17bcc509d6e39720043d6","url":"docs/tutorial01/index.html"},{"revision":"9e40fed61abd0cbdfe8f1ef97a377bb9","url":"docs/tutorial02/index.html"},{"revision":"0d36977a6db3505acc0523a24bcbfd58","url":"docs/usage/index.html"},{"revision":"b4bc6b91e2f9961fbd65cb041a5cc4df","url":"docs/uses/index.html"},{"revision":"76a583afd18897f4d44cc632093f2f40","url":"docs/webadmin/index.html"},{"revision":"83d633543311537c981b7d7f369cdf2d","url":"docs/why-not-ldap/index.html"},{"revision":"9a37e9ce12a2078d217f28d4bf549c0d","url":"docs/x500cli/index.html"},{"revision":"0ba065a4e089d9e225753fb1841e7df0","url":"index.html"},{"revision":"4bb72b5a821f4c84acc81d05ea9eec35","url":"manifest.json"},{"revision":"b5eef8fcb6570f0ade2f691a143d1736","url":"img/boar-head-rune-circle.svg"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"4343e07bf942aefb5f334501958fbc0e","url":"img/favicon.ico"},{"revision":"aa4fa2cdc39d33f2ee3b8f245b6d30d9","url":"img/logo.svg"},{"revision":"b9d9189ed8f8dd58e70d9f8b3f693b3e","url":"img/tutorial/docsVersionDropdown.png"},{"revision":"c14bff79aafafca0957ccc34ee026e2c","url":"img/tutorial/localeDropdown.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});"SKIP_WAITING"===(t.data&&t.data.type)&&self.skipWaiting()}))})()})()})();