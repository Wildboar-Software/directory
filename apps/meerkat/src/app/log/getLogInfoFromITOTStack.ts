import { ISOTransportOverTCPStack } from "@wildboar/osi-net";
import { getLogInfoFromSocket } from "./getLogInfoFromSocket";

export
function getLogInfoFromITOTStack (itot: ISOTransportOverTCPStack) {
    return {
        ...getLogInfoFromSocket(itot.network.socket),
        rose_transport: "itot",
        // state
        network_state: itot.network.getPhase(),
        transport_state: itot.transport.state,
        session_state: itot.session.state,
        presentation_state: itot.presentation.state,
        acse_state: itot.acse.state,

        // selectors
        local_t_selector: itot.transport.local_t_selector?.toString("hex"),
        local_s_selector: itot.session.local_selector?.toString("hex"),
        local_p_selector: itot.presentation.local_selector?.toString("hex"),
        remote_t_selector: itot.transport.remote_t_selector?.toString("hex"),
        remote_s_selector: itot.session.remote_selector?.toString("hex"),
        remote_p_selector: itot.presentation.remote_selector?.toString("hex"),

        // other info
        max_nsdu_size: itot.network.max_nsdu_size,
        max_tpdu_size: itot.transport.max_tpdu_size,
        max_tsdu_size: itot.transport.max_tsdu_size,
        max_ssdu_size: itot.session.max_ssdu_size,
        inbound_max_tsdu_size: itot.session.inbound_max_tsdu_size,
        outbound_max_tsdu_size: itot.session.outbound_max_tsdu_size,
        session_timer_timeout: itot.session.timer_timeout,
        session_Discard_rcv_flow: itot.session.Discard_rcv_flow,
        session_Discard_snd_flow: itot.session.Discard_snd_flow,
        session_FU: itot.session.FU,
        session_SPMWinner: itot.session.SPMWinner,
        session_TEXP: itot.session.TEXP,
        session_VAr: itot.session.VAr,
        session_VAs: itot.session.VAs,
        session_VMr: itot.session.VMr,
        session_VMs: itot.session.VMs,
        session_VRr: itot.session.VRr,
        session_VRs: itot.session.VRs,
        session_V_A: itot.session.V_A,
        session_V_M: itot.session.V_M,
        session_V_R: itot.session.V_R,
        session_Vact: itot.session.Vact,
        session_Vadi: itot.session.Vadi,
        session_Vado: itot.session.Vado,
        session_Vcoll: itot.session.Vcoll,
        session_Vdnr: itot.session.Vdnr,
        session_Vnextact: itot.session.Vnextact,
        session_Vrsp: itot.session.Vrsp,
        session_Vrspnb: itot.session.Vrspnb,
        session_Vrspnbr: itot.session.Vrspnbr,
        session_Vrspnbs: itot.session.Vrspnbs,
        session_Vrspr: itot.session.Vrspr,
        session_Vrsps: itot.session.Vrsps,
        session_Vsc: itot.session.Vsc,
        session_Vtca: itot.session.Vtca,
        session_Vtrr: itot.session.Vtrr,
        session_bufferIndex: itot.session.bufferIndex,
        session_caller: itot.session.caller,
        session_dataToken: itot.session.dataToken,
        session_disconnectReason: itot.session.disconnectReason,
        session_majorActivityToken: itot.session.majorActivityToken,
        session_releaseToken: itot.session.releaseToken,
        session_synchronizeMinorToken: itot.session.synchronizeMinorToken,
        session_version: itot.session.version,
        presentation_FU_CM: itot.presentation.FU_CM,
        presentation_FU_CR: itot.presentation.FU_CR,
        presentation_aep: itot.presentation.aep,
        presentation_cr: itot.presentation.cr,
        presentation_max_contexts: itot.presentation.max_contexts,
        presentation_rl: itot.presentation.rl,
        acse_initiator: itot.acse.initiator,
    };
}
