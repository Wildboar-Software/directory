"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6214],{1184:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(4041);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},9094:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"setup","title":"Setup","description":"System Requirements","source":"@site/docs/setup.md","sourceDirName":".","slug":"/setup","permalink":"/directory/docs/setup","draft":false,"unlisted":false,"editUrl":"https://github.com/Wildboar-Software/directory/edit/main/website/docs/setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Why Not LDAP?","permalink":"/directory/docs/why-not-ldap"},"next":{"title":"Configuration","permalink":"/directory/docs/env"}}');var i=t(1085),s=t(1184);const a={},o="Setup",l={},c=[{value:"System Requirements",id:"system-requirements",level:2},{value:"Installation / Deployment",id:"installation--deployment",level:2},{value:"Database",id:"database",level:3},{value:"Bitnami Helm Chart",id:"bitnami-helm-chart",level:4},{value:"Configuration",id:"configuration",level:3},{value:"Local",id:"local",level:3},{value:"Docker / Docker-Compose",id:"docker--docker-compose",level:3},{value:"Kubernetes",id:"kubernetes",level:3},{value:"DSA Initialization",id:"dsa-initialization",level:2},{value:"Access Control",id:"access-control",level:2},{value:"Creating the administrative user",id:"creating-the-administrative-user",level:3},{value:"Set a password for the administrative user",id:"set-a-password-for-the-administrative-user",level:3},{value:"Creating the administrative point",id:"creating-the-administrative-point",level:3},{value:"Creating access control subentries",id:"creating-access-control-subentries",level:3},{value:"Making the administrative point an access control administrative point",id:"making-the-administrative-point-an-access-control-administrative-point",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"setup",children:"Setup"})}),"\n",(0,i.jsx)(n.h2,{id:"system-requirements",children:"System Requirements"}),"\n",(0,i.jsx)(n.p,{children:"Meerkat DSA requires NodeJS version 17 or higher. With heavy usage, you can\r\nexpect Meerkat DSA's memory usage to get up to 300MB. It would be wise to\r\nanticipate the extreme and ensure that Meerkat DSA has at least 500MB of memory."}),"\n",(0,i.jsx)(n.p,{children:"In addition to this, Meerkat DSA needs a database (as detailed below), which may\r\ntake a lot more memory. You may also wish to set up a reverse HTTP proxy such as\r\nNginx, Caddy, or Apache, which will also consume some resources."}),"\n",(0,i.jsx)(n.p,{children:"Added together, you should probably have no less than 1 GB of memory free for\r\nMeerkat DSA, the database, and a reverse proxy (if used)."}),"\n",(0,i.jsx)(n.p,{children:"Meerkat DSA has only been tested on x86-64 platforms, so no guarantees can be\r\nmade about how it will run on other architectures. Meerkat DSA should run just\r\nfine on Windows, Mac OS, Linux, and possibly more operating systems, and it has\r\nbeen briefly tested on all three."}),"\n",(0,i.jsxs)(n.p,{children:["X.500 directory traffic is typically not time-sensitive, so high latency is\r\nusually tolerable. However, the network may need to be able to afford high\r\nthroughput, since certain operations, such as ",(0,i.jsx)(n.code,{children:"search"})," and ",(0,i.jsx)(n.code,{children:"list"}),", can\r\npotentially return a lot of data all at once."]}),"\n",(0,i.jsx)(n.h2,{id:"installation--deployment",children:"Installation / Deployment"}),"\n",(0,i.jsx)(n.p,{children:"It is recommended that you install Meerkat DSA in a Kubernetes cluster using\r\nHelm. However, Meerkat DSA can be installed as a Docker Compose app and can also\r\nrun locally."}),"\n",(0,i.jsx)(n.h3,{id:"database",children:"Database"}),"\n",(0,i.jsx)(n.p,{children:"In any case that you deploy Meerkat DSA, you will need to configure a MySQL\r\ndatabase that will hold the DSA's data. Ideally, you should use a secure\r\npassword and TLS to secure the connection to the database. It is also strongly\r\nrecommended that Meerkat DSA coexist in a physically nearby location to the\r\ndatabase so that latency is low; if your Meerkat DSA instance has to send its\r\nqueries to a MySQL database on the other side of the planet, it will mean that\r\nMeerkat DSA will respond slowly to requests!"}),"\n",(0,i.jsxs)(n.p,{children:["You will need to manually create a database within your database server that\r\nMeerkat DSA can use exclusively. Conventionally, this is named ",(0,i.jsx)(n.code,{children:"directory"}),", but\r\nyou can name it anything you want as long as you configure your ",(0,i.jsx)(n.code,{children:"DATABASE_URL"}),"\r\nto use that database."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"bitnami/mysql"})," Helm chart will allow you to define a database to create\r\non startup, so you will not need to manually log into this database server to\r\ncreate this database. Different container images may also allow you to define\r\na database to create on startup as well."]})}),"\n",(0,i.jsx)(n.p,{children:'The MySQL database will then need to be seeded with database schema. In\r\ntechnical terms, we need to "deploy a migration" to the database. You will need\r\na user account that has all permissions to alter database schema. It is fine if\r\nthis is a root / administrator account, since this will only be used once. How\r\nyou actually deploy the migration will depend on how you have deployed Meerkat\r\nDSA, so this will be described on a case-by-case basis in the sections to\r\nfollow.'}),"\n",(0,i.jsx)(n.p,{children:"After the database migration is complete, you can run Meerkat DSA with a\r\ndatabase account having just create + read + update + delete permissions for\r\nthe database."}),"\n",(0,i.jsx)(n.h4,{id:"bitnami-helm-chart",children:"Bitnami Helm Chart"}),"\n",(0,i.jsxs)(n.p,{children:["One of the easiest ways to get a MySQL instance ready to go in a Kubernetes\r\ncluster is the\r\n",(0,i.jsx)(n.a,{href:"https://artifacthub.io/packages/helm/bitnami/mysql",children:"Bitnami Helm chart"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Here is one way to do this:"}),"\n",(0,i.jsx)(n.p,{children:"Run this command to create a secret in Kubernetes:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl create secret generic <your secret name> \\\r\n  --from-literal=mysql-root-password=<your root password> \\\r\n  --from-literal=mysql-replication-password=<your rep password> \\\r\n  --from-literal=mysql-password=<your other password> \\\r\n  --namespace=<your namespace>\n"})}),"\n",(0,i.jsx)(n.p,{children:"Add the Bitnami Helm repo via this command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"helm repo add bitnami https://charts.bitnami.com/bitnami\n"})}),"\n",(0,i.jsx)(n.p,{children:"Finally, install MySQL from the Bitnami Helm repo via this command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"helm install <your database name> bitnami/mysql \\\r\n  --set auth.existingSecret=<your secret name> \\\r\n  --set auth.database=directory \\\r\n  --atomic \\\r\n  --namespace=<your namespace>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Meerkat DSA is configured through environment variables. These environment\r\nvariables and their effects are documented ",(0,i.jsx)(n.a,{href:"/directory/docs/env",children:"here"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["At minimum, you MUST define ",(0,i.jsx)(n.code,{children:"DATABASE_URL"}),". Besides that, you SHOULD define the\r\nfollowing other environment variables:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MEERKAT_SIGNING_CERTS_CHAIN_FILE"}),", which is documented ",(0,i.jsx)(n.a,{href:"/directory/docs/env#meerkat_signing_certs_chain_file",children:"here"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MEERKAT_SIGNING_KEY_FILE"}),", which is documented ",(0,i.jsx)(n.a,{href:"/directory/docs/env#meerkat_signing_key_file",children:"here"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MEERKAT_TLS_CERT_FILE"}),", which is documented ",(0,i.jsx)(n.a,{href:"/directory/docs/env#meerkat_tls_cert_file",children:"here"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MEERKAT_TLS_KEY_FILE"}),", which is documented ",(0,i.jsx)(n.a,{href:"/directory/docs/env#meerkat_tls_key_file",children:"here"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"NODE_ENV"}),", which should always be set to ",(0,i.jsx)(n.code,{children:"production"})," unless you are\r\ndebugging or developing Meerkat DSA."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"LANG"}),", which should be set to the locale identifier for your desired locale.\r\nThis will determine the language used for logging as well as the language for\r\nerror messages. For American English, this should be ",(0,i.jsx)(n.code,{children:"en_US.utf8"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"LANG"})," environment variable will NOT affect the web administration console.\r\nThe web administration console does not support internationalization at all."]})}),"\n",(0,i.jsx)(n.h3,{id:"local",children:"Local"}),"\n",(0,i.jsxs)(n.p,{children:["To do this, you must have Node.js version 17 or higher installed. This will\r\nalso install Node Package Manager (",(0,i.jsx)(n.code,{children:"npm"}),"). You will also need Git installed.\r\nYou will also need a MySQL database somewhere ofr"]}),"\n",(0,i.jsxs)(n.p,{children:["You can run Meerkat DSA locally by cloning the\r\n",(0,i.jsx)(n.a,{href:"https://github.com/Wildboar-Software/directory",children:"source repository for Meerkat DSA"}),"\r\nby running ",(0,i.jsx)(n.code,{children:"git clone https://github.com/Wildboar-Software/directory"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Then run ",(0,i.jsx)(n.code,{children:"npm install"}),". This will install all of the dependencies for this\r\nproject to build and work."]}),"\n",(0,i.jsxs)(n.p,{children:["Run ",(0,i.jsx)(n.code,{children:"npx nx run meerkat:build:production"})," to build Meerkat DSA for the system\r\nyou are running. This will put the compiled output into\r\n",(0,i.jsx)(n.code,{children:"./dist/apps/meerkat/main.js"}),". You can run this JavaScript file via\r\n",(0,i.jsx)(n.code,{children:"node ./dist/apps/meerkat/main.js"}),", however, it will probably not work right\r\naway."]}),"\n",(0,i.jsxs)(n.p,{children:["You will need to configure Meerkat DSA using environment variables. How\r\nyou do this will depend on whether you are using Windows, Linux, Mac, or some\r\nother operating system, but you can look at what you need to get it up and\r\nrunning on the ",(0,i.jsx)(n.a,{href:"/directory/docs/env",children:"Configuration Environment Variables documentation"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["There is technically only one environment variable that is required, which is\r\n",(0,i.jsx)(n.code,{children:"DATABASE_URL"}),". Set this to the URL of your database."]}),"\n",(0,i.jsxs)(n.p,{children:["Once you have your environment variables defined to configure Meerkat DSA as\r\nyou'd like, you will need to actually configure the database with the schema\r\nneeded to store Meerkat DSA's data, which you can do by running\r\n",(0,i.jsx)(n.code,{children:"npx prisma migrate deploy --schema=apps/meerkat/src/prisma/schema.prisma"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Then run ",(0,i.jsx)(n.code,{children:"node ./dist/apps/meerkat/main.js"}),". You should see your application\r\nstart up on the console (unless you turned off console logging)."]}),"\n",(0,i.jsx)(n.h3,{id:"docker--docker-compose",children:"Docker / Docker-Compose"}),"\n",(0,i.jsxs)(n.p,{children:["You can define your own Docker-Compose stack that will pull the Meerkat DSA\r\nimage ",(0,i.jsx)(n.code,{children:"ghcr.io/wildboar-software/meerkat-dsa"})," and wire it up to a MySQL\r\ndatabase, but the\r\n",(0,i.jsx)(n.a,{href:"https://github.com/Wildboar-Software/directory",children:"source repository for Meerkat DSA"}),"\r\nhas a\r\n",(0,i.jsx)(n.a,{href:"https://github.com/Wildboar-Software/directory/blob/master/pkg/docker-compose.yaml",children:"starter template"}),"\r\nthat you can use."]}),"\n",(0,i.jsx)(n.p,{children:"The starter template will create a MySQL database, deploy the migrations to it,\r\nand start Meerkat DSA. Pretty much all you have to do is configure the\r\nenvironment variables and mount volumes for your signing key and cert, your\r\nTLS key and cert, your CA certificates bundle, your CRLs, your init script, and\r\nany other files that you may want to be in the container."}),"\n",(0,i.jsx)(n.h3,{id:"kubernetes",children:"Kubernetes"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"There is a lot that goes into using Kubernetes and Helm--far more than I could\r\npossibly teach you in this documentation. Therefore, this documentation will\r\nassume that you have a working understanding of Kubernetes."})}),"\n",(0,i.jsxs)(n.p,{children:["As with Docker-Compose, you may define your own Kubernetes manifests to deploy\r\nMeerkat DSA, however, ",(0,i.jsx)(n.a,{href:"https://wildboarsoftware.com/en",children:"Wildboar Software"})," has\r\ndefined a ",(0,i.jsx)(n.a,{href:"https://helm.sh/",children:"Helm"})," chart for easy installation and removal."]}),"\n",(0,i.jsxs)(n.p,{children:["To install via Helm, first you must have ",(0,i.jsx)(n.code,{children:"helm"})," installed, which you can do by\r\nfollowing ",(0,i.jsx)(n.a,{href:"https://helm.sh/docs/intro/install/",children:"these instructions"}),". You must\r\nalso have a Kubernetes cluster running."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Note that you do not have to run the official Kubernetes control\r\nplane. There are plenty of other great alternatives such as K3s, Microk8s, and\r\nMinikube, all of which should work, and some of which are more suitable for\r\nlower-powered devices."})}),"\n",(0,i.jsxs)(n.p,{children:["If you haven't ",(0,i.jsx)(n.a,{href:"#database",children:"set up the database"}),", by now, do so."]}),"\n",(0,i.jsxs)(n.p,{children:["When you have ",(0,i.jsx)(n.code,{children:"helm"})," installed, a Kubernetes cluster up and running, and you\r\nhave authenticated to the cluster, you need to define a Kubernetes secret that\r\nyour Meerkat DSA deployment can use to access your database. This needs to be\r\na Kubernetes ",(0,i.jsx)(n.code,{children:"Secret"})," and not a ",(0,i.jsx)(n.code,{children:"ConfigMap"}),", because your database URL will most\r\nlikely include a username and password. You can create this secret using this\r\ncommand:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl create secret generic <your secret name> \\\r\n  --from-literal=databaseUrl=<your database url> \\\r\n  --namespace=<your namespace>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Obviously, substitute ",(0,i.jsx)(n.code,{children:"<your secret name>"}),", ",(0,i.jsx)(n.code,{children:"<your database url>"}),", and\r\n",(0,i.jsx)(n.code,{children:"<your namespace>"})," in the example above. The Kubernetes secret MUST have the\r\nkey ",(0,i.jsx)(n.code,{children:"databaseUrl"}),". You CANNOT name this something else. Note that\r\nWildboar Software's Helm chart, by default, will seek to mount a secret named\r\n",(0,i.jsx)(n.code,{children:"meerkat-database-secret"}),", so this is what you SHOULD name this secret, unless\r\nyou have multiple DSA instances that you expect to run."]}),"\n",(0,i.jsxs)(n.p,{children:["There may be other secrets that you wish to create, such as the signing secret\r\nand TLS secret. These can be done with a slightly different command. Both of\r\nthese secrets are of type ",(0,i.jsx)(n.code,{children:"kubernetes.io/tls"})," and can be created using the\r\ncommand ",(0,i.jsx)(n.code,{children:"kubectl create secret tls ..."}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["When you have created all of the ",(0,i.jsx)(n.code,{children:"ConfigMap"}),"s and ",(0,i.jsx)(n.code,{children:"Secret"}),"s you plan to create,\r\nrun these commands to deploy Meerkat DSA:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Run ",(0,i.jsx)(n.code,{children:"helm repo add wildboar https://wildboarprod.blob.core.windows.net/helm-charts"}),".\r\nThis will install Wildboar Software's Helm repository to your saved list of\r\nrepositories so you can use Helm charts defined by Wildboar Software."]}),"\n",(0,i.jsxs)(n.li,{children:["Run ",(0,i.jsx)(n.code,{children:"helm repo update"}),". This will update your local cache of all Helm charts\r\nthat are available in your configured repositories."]}),"\n",(0,i.jsxs)(n.li,{children:["Run ",(0,i.jsx)(n.code,{children:"helm install <release-name> wildboar/meerkat-dsa ..."}),", but replace\r\n",(0,i.jsx)(n.code,{children:"<release-name>"})," with any name you choose for your Meerkat DSA deployment,\r\nand replace the ",(0,i.jsx)(n.code,{children:"..."})," with any other command arguments you need to supply to\r\nHelm to customize your deployment. At a minimum, you may want to append\r\n",(0,i.jsx)(n.code,{children:"--set databaseSecretName=<your database secret name>"}),". If you want your\r\ninstance to be publicly accessible, add ",(0,i.jsx)(n.code,{children:"--set service.type=LoadBalancer"})," to\r\nthat command."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["You should configure Kubernetes\r\n",(0,i.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity",children:"inter-pod affinity"}),"\r\nso that your Meerkat DSA runs on the same node as your database to minimize\r\nlatency. It does not seem like there is an easy way to do this using the Helm\r\nCLI alone: you might have to define a values override file. See\r\n",(0,i.jsx)(n.code,{children:".github/workflows/main.yml"})," within this repository for an example\r\n(specifically, the ",(0,i.jsx)(n.code,{children:"deploy_demo"})," job)."]})}),"\n",(0,i.jsxs)(n.p,{children:["If you want access to the web admin console, add\r\n",(0,i.jsx)(n.code,{children:"--set dangerouslyExposeWebAdmin=true"})," to the command above, but be sure to\r\nconfigure authentication for it or put it behind a secure reverse HTTP proxy\r\nthat requires authentication and TLS. Client TLS authentication would be even\r\nbetter than basic authentication."]}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsxs)(n.p,{children:["Access to the web administration console means full permission to do anything.\r\nIt is highly recommended that you not only configure\r\n",(0,i.jsx)(n.a,{href:"/directory/docs/webadmin#authentication",children:"authentication"})," for it, but also use Kubernetes\r\n",(0,i.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/network-policies/",children:"Network Policy"}),"\r\nto ensure that other pods cannot even reach it."]}),(0,i.jsxs)(n.p,{children:["As an even more secure measure, you may simply not expose a service for that pod\r\nat all, requiring that you use\r\n",(0,i.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/access-application-cluster/port-forward-access-application-cluster/#forward-a-local-port-to-a-port-on-the-pod",children:(0,i.jsx)(n.code,{children:"kubectl port-forward"})}),"\r\nto access it. This means that only your Kubernetes cluster administrators would\r\nbe able to reach the web admin console, but this might work for your use case."]})]}),"\n",(0,i.jsxs)(n.p,{children:["You can see example deployments to Kubernetes clusters in Bash scripts\r\n",(0,i.jsx)(n.a,{href:"https://github.com/Wildboar-Software/directory/blob/master/scripts/publish.sh",children:"here"}),"\r\nand in GitHub Actions YAML configuration\r\n",(0,i.jsx)(n.a,{href:"https://github.com/Wildboar-Software/directory/blob/master/.github/workflows/main.yml",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"dsa-initialization",children:"DSA Initialization"}),"\n",(0,i.jsx)(n.p,{children:"When your DSA comes online, if there is not root DSE, your DSA will create it.\r\nOtherwise, there are no entries in existence."}),"\n",(0,i.jsx)(n.h2,{id:"access-control",children:"Access Control"}),"\n",(0,i.jsx)(n.p,{children:"At this point, your DSA will be world-readable and world-writeable. If you do\r\nnot want this, you will need to implement access controls. To do this, you will\r\nneed to define an Access Control Specific Area (ACSA) that spans the entirety of\r\nyour autonomous administrative area. To do this, you will need to do these\r\nthings in this specific order (details to follow):"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create an administrative user."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Set a password for the administrative user."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create an administrative point, then"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create access control subentries under this administrative point, then"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add the ",(0,i.jsx)(n.code,{children:"id-ar-accessControlSpecificArea"})," value to the ",(0,i.jsx)(n.code,{children:"administrativeRole"}),"\r\nattribute of the administrative point, and set the ",(0,i.jsx)(n.code,{children:"accessControlScheme"}),"\r\nattribute of the administrative point."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"basicAccessControlScheme"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"simplifiedAccessControlScheme"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"rule-based-access-control"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"rule-and-basic-access-control"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"rule-and-simple-access-control"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"If you create the administrative point with an ACSA role before creating the\r\nsubentries, you might be locked out, unable to read or write anything including\r\nand below that administrative point! This is because an absence of Access\r\nControl Information (ACI) items, as would be present in subentries, indicates\r\na denial of access. Creating the ACSA administrative point is the switch that\r\nturns access control on. Ensure you configure your ACI items in your ACSA and\r\nACIA subentries are configured to allow you to continue to set up your DSA!"})}),"\n",(0,i.jsx)(n.h3,{id:"creating-the-administrative-user",children:"Creating the administrative user"}),"\n",(0,i.jsxs)(n.p,{children:["You will need to create a DSE of type ",(0,i.jsx)(n.code,{children:"entry"})," that will represent the\r\nadministrator of the DSA. There are no requirements as to what object classes\r\nthis entry must have."]}),"\n",(0,i.jsx)(n.h3,{id:"set-a-password-for-the-administrative-user",children:"Set a password for the administrative user"}),"\n",(0,i.jsxs)(n.p,{children:["This administrator's DSE should have a password set through the\r\n",(0,i.jsx)(n.code,{children:"administerPassword"})," operation, which will set a password for this entry. The\r\npassword SHOULD NOT be set using the ",(0,i.jsx)(n.code,{children:"modifyEntry"})," or ",(0,i.jsx)(n.code,{children:"addEntry"})," operation."]}),"\n",(0,i.jsx)(n.h3,{id:"creating-the-administrative-point",children:"Creating the administrative point"}),"\n",(0,i.jsxs)(n.p,{children:["You may use an existing administrative point if you'd like, but, again, anything\r\nin your DSA that is not enclosed by an ACSA admininstrative point will be\r\nworld-readable and world-writeable. This administrative point MUST NOT have the\r\n",(0,i.jsx)(n.code,{children:"id-ar-accessControlSpecificArea"})," role value present in its ",(0,i.jsx)(n.code,{children:"administrativeRole"}),"\r\nattribute (for right now)."]}),"\n",(0,i.jsx)(n.h3,{id:"creating-access-control-subentries",children:"Creating access control subentries"}),"\n",(0,i.jsx)(n.p,{children:"You will need to create access control subentries beneath your soon-to-be\r\naccess control administrative point. These subentries contain Access Control\r\nInformation (ACI) items. These subentries shall:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Have an ",(0,i.jsx)(n.code,{children:"objectClass"})," attribute having a value ",(0,i.jsx)(n.code,{children:"accessControlSubentry"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Have a ",(0,i.jsx)(n.code,{children:"prescriptiveACI"})," attribute with values."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Defining what ACI items are here is outside of scope for this documentation, but\r\nthe ACI items that you define SHOULD:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Allow administrators all permissions to all entries."}),"\n",(0,i.jsxs)(n.li,{children:["Allow users to read and write to their own entries,","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Including:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Changing their passwords"}),"\n",(0,i.jsx)(n.li,{children:"Deleting their entry"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Excluding:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Modifying operational attributes"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Allow unauthenticated / anonymous users to only read non-sensitive entries and\r\nattributes, if any."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["When defining ACI items, keep in mind that the server will apply a configurable\r\nlocal qualifier to the calculated ",(0,i.jsx)(n.code,{children:"AuthenticationLevel"}),' for a user based on\r\nwhether the connection is secured through Transport Layer Security (TLS) or some\r\nother means. The "points" that Meerkat assigns to a connection secured as such\r\nis determined by the value of the environment variable\r\n',(0,i.jsx)(n.code,{children:"AUTH_LEVEL_LOCAL_QUALIFIER_POINTS_FOR_TLS"}),". This environment variable shall\r\ncontain a reasonably-sized (not extremely large) integer."]}),"\n",(0,i.jsxs)(n.p,{children:["The ACI items you define SHOULD be few in number, and, for performance reasons,\r\nall ACI items within an ACSA SHOULD have distinct ",(0,i.jsx)(n.code,{children:"precedence"})," values."]}),"\n",(0,i.jsx)(n.h3,{id:"making-the-administrative-point-an-access-control-administrative-point",children:"Making the administrative point an access control administrative point"}),"\n",(0,i.jsxs)(n.p,{children:["You should then define an access control administrative point. This can overlap\r\nwith your autonomous administrative point. This is a DSE of type ",(0,i.jsx)(n.code,{children:"admPoint"})," that\r\nhas an ",(0,i.jsx)(n.code,{children:"administrativeRole"})," attribute having value\r\n",(0,i.jsx)(n.code,{children:"id-ar-accessControlSpecificArea"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"If you do not have access control administrative points defined, your DSA will\r\nbe world-readable and world-writeable!"})}),"\n",(0,i.jsx)(n.p,{children:"One this point exists, your access control will activate."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);