"use strict";(self.webpackChunkdirectory=self.webpackChunkdirectory||[]).push([[9348],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>g});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),f=o,g=u["".concat(s,".").concat(f)]||u[f]||m[f]||i;return t?n.createElement(g,a(a({ref:r},p),{},{components:t})):n.createElement(g,a({ref:r},p))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c[u]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},979:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>f,frontMatter:()=>c,metadata:()=>l,toc:()=>u});var n=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={},s="Versioning",l={unversionedId:"versioning",id:"versioning",title:"Versioning",description:"Meerkat DSA roughly uses Semantic Versioning, but it is",source:"@site/docs/versioning.md",sourceDirName:".",slug:"/versioning",permalink:"/directory/docs/versioning",draft:!1,editUrl:"https://github.com/Wildboar-Software/directory/edit/main/website/docs/versioning.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Changelog for Meerkat DSA",permalink:"/directory/docs/changelog-meerkat"},next:{title:"Support",permalink:"/directory/docs/support"}},p={},u=[{value:"Incrementing the Version",id:"incrementing-the-version",level:2}],m={toc:u};function f(e){var r=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"versioning"},"Versioning"),(0,i.kt)("p",null,"Meerkat DSA roughly uses ",(0,i.kt)("a",{parentName:"p",href:"https://semver.org/"},"Semantic Versioning"),', but it is\nnot entirely clear what constitutes a "breaking change" for something other than\na pure API. What about changes to environment variable names, or log messages?\nIn the face of this ambiguity, Meerkat DSA takes a somewhat liberal approach to\nversioning, in part to avoid scaring off new users with repeated major version\nincrements.'),(0,i.kt)("h2",{id:"incrementing-the-version"},"Incrementing the Version"),(0,i.kt)("p",null,"TODO:"))}f.isMDXComponent=!0}}]);