"use strict";(self.webpackChunkdirectory=self.webpackChunkdirectory||[]).push([[16],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),p=o,h=u["".concat(l,".").concat(p)]||u[p]||m[p]||i;return n?a.createElement(h,r(r({ref:t},d),{},{components:n})):a.createElement(h,r({ref:t},d))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},258:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],s={},l="Tutorial 2: Hooking up Gitea with Meerkat DSA",c={unversionedId:"tutorial02",id:"tutorial02",title:"Tutorial 2: Hooking up Gitea with Meerkat DSA",description:"In this tutorial, we will configure a Gitea server to use",source:"@site/docs/tutorial02.md",sourceDirName:".",slug:"/tutorial02",permalink:"/directory/docs/tutorial02",editUrl:"https://github.com/Wildboar-Software/directory/edit/main/website/docs/tutorial02.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tutorial 1: Set up the X.500 CLI",permalink:"/directory/docs/tutorial01"},next:{title:"ASN.1 Modules",permalink:"/directory/docs/asn1"}},d=[{value:"Creating the Organization&#39;s DSE",id:"creating-the-organizations-dse",children:[],level:2},{value:"Configure Access Control",id:"configure-access-control",children:[],level:2},{value:"Creating Schema",id:"creating-schema",children:[],level:2},{value:"Creating Users",id:"creating-users",children:[],level:2},{value:"Gitea Configuration",id:"gitea-configuration",children:[],level:2}],m={toc:d};function u(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"tutorial-2-hooking-up-gitea-with-meerkat-dsa"},"Tutorial 2: Hooking up Gitea with Meerkat DSA"),(0,i.kt)("p",null,"In this tutorial, we will configure a ",(0,i.kt)("a",{parentName:"p",href:"https://gitea.io/"},"Gitea")," server to use\nMeerkat DSA as a source of authentication. After this tutorial, you will be\nable to add users to a Meerkat DSA instance and have them gain access to a\nGitea server automatically. These users will be members of a fictitious\norganization named Foobar, Inc."),(0,i.kt)("p",null,"Gitea was chosen for this tutorial because it is one of the easiest applications\nto start up with almost no configuration. In fact, merely installing it via the\n",(0,i.kt)("a",{parentName:"p",href:"https://gitea.com/gitea/helm-chart/"},"Helm chart")," with no modified settings is\nsufficient for this tutorial."),(0,i.kt)("p",null,"This tutorial will assume that you have a Meerkat DSA instance already started,\nbut there is no data other than the Root DSE (which is created automatically if\nit is not found)."),(0,i.kt)("p",null,"This tutorial will also assume that you have installed and configured the\n",(0,i.kt)("a",{parentName:"p",href:"/directory/docs/x500cli"},"X.500 command-line interface")," to connect anonymously to your DSA."),(0,i.kt)("h2",{id:"creating-the-organizations-dse"},"Creating the Organization's DSE"),(0,i.kt)("p",null,"Create an organization first-level DSE using the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap add org 'o=Foobar' --organizationName='Foobar'\n")),(0,i.kt)("p",null,"We are also going to set the password for the organization, because we will\nconsider this DSE to be the administrative user for the organization. It will\nhave supreme permissions to read and write everything in the organization."),(0,i.kt)("p",null,"We ",(0,i.kt)("em",{parentName:"p"},"could")," have done this\nin the previous command using the ",(0,i.kt)("inlineCode",{parentName:"p"},"--userPassword")," option, but this is less\nsecure, because this command might end up in your shell's history, and the\npassword can be transmitted hashed if we use the ",(0,i.kt)("inlineCode",{parentName:"p"},"apw")," command instead, which\nmeans that we can set the password without the DSA ever even knowing what it is.\nTo do so, run this command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap apw 'o=Foobar'\n")),(0,i.kt)("p",null,"Note that, because we defined our first password in this DSA, no users will be\nable to add top-level DSEs except this first one."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"There is no defined, standard way to restrict who can add first-level DSEs, so\nMeerkat DSA's solution is to grant the first user with a password the ability to\nadd first-level DSEs. Prior to this first password's existence, any user can add\nnew first-level DSEs. For this reason, it is important to create a user with a\npassword as soon as you have your first-level DSEs created. For clarification,\nthis special privilege is only for adding first-level DSEs; outside of adding\nthese entries, normal access controls apply."))),(0,i.kt)("h2",{id:"configure-access-control"},"Configure Access Control"),(0,i.kt)("p",null,"First we need to create an access control subentry. Its subtree specification\nwill cover the whole administrative area, which makes our command a lot\nsimpler."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap add subentry 'o=Foobar,cn=Access Control' --commonName='Access Control'\n")),(0,i.kt)("p",null,"Now, we want this subentry to become an access control subentry, so run this\ncommand:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap mod become acsub 'o=Foobar,cn=Access Control'\n")),(0,i.kt)("p",null,"Unfortunately, our next command is not simple at all. We have to define\nAccess Control Information (ACI) items, which define our access control rules.\nThe first one we should add establishes that the organization user (the\nadministrator) can do anything within the organzation."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap mod add aci 'o=Foobar,cn=Access Control' prescriptive 'Organization administrator' 250 simple \\\n  --userName='o=Foobar' \\\n  --entry \\\n  --allUserAttributeTypesAndValues \\\n  --allOperationalAttributeTypesAndValues \\\n  --grantAdd \\\n  --grantDiscloseOnError \\\n  --grantRead \\\n  --grantRemove \\\n  --grantBrowse \\\n  --grantExport \\\n  --grantImport \\\n  --grantModify \\\n  --grantRename \\\n  --grantReturnDN \\\n  --grantCompare \\\n  --grantFilterMatch \\\n  --grantInvoke\n")),(0,i.kt)("p",null,'The above command creates a prescriptive ACI item with the tag\n"Organization administrator" and a precedence of 250 (pretty high, ensuring that\nthe administrator will always have administrative access) and ',(0,i.kt)("inlineCode",{parentName:"p"},"simple"),"\nauthentication level. The ",(0,i.kt)("inlineCode",{parentName:"p"},"userName")," parameter specifically names ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar")," as\nthe subject of this ACI item. The ",(0,i.kt)("inlineCode",{parentName:"p"},"entry")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"allUserAttributeTypesAndValues"),"\noptions name entries themselves and all of their attribute types and values as\nthe objects of this ACI item. Finally, we use every single ",(0,i.kt)("inlineCode",{parentName:"p"},"--grant*")," option to\npermit the subject every permissions to the objects."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You will almost ",(0,i.kt)("em",{parentName:"p"},"always")," want to use an authentication level of ",(0,i.kt)("inlineCode",{parentName:"p"},"simple")," for\nanything that needs to be restricted, because ",(0,i.kt)("inlineCode",{parentName:"p"},"none")," means no authentication,\nand ",(0,i.kt)("inlineCode",{parentName:"p"},"strong")," authentication is not (currently) supported by Meerkat DSA."))),(0,i.kt)("p",null,"In X.500 directories, subentries are controlled separately by subentry ACI\nitems, which are stored in their respective administrative points. We need to\ncreate a separate ACI item for this so we can read and write to our subentry!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap mod add aci 'o=Foobar' subentry 'Organization administrator' 250 simple \\\n  --userName='o=Foobar' \\\n  --entry \\\n  --allUserAttributeTypesAndValues \\\n  --allOperationalAttributeTypesAndValues \\\n  --grantAdd \\\n  --grantDiscloseOnError \\\n  --grantRead \\\n  --grantRemove \\\n  --grantBrowse \\\n  --grantExport \\\n  --grantImport \\\n  --grantModify \\\n  --grantRename \\\n  --grantReturnDN \\\n  --grantCompare \\\n  --grantFilterMatch \\\n  --grantInvoke\n")),(0,i.kt)("p",null,"Note that the above command is ",(0,i.kt)("em",{parentName:"p"},"almost")," the exact same as the one that came\nbefore it. We just changed ",(0,i.kt)("inlineCode",{parentName:"p"},"prescriptive")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"subentry")," and we changed the\ntarget object to ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar"),". The idea is still the same: we are granting\n",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar")," all permission to do everything to all subentries within this\naccess control administrative area."),(0,i.kt)("p",null,'For now, we only need these two ACI items. In a real directory, you will\nprobably want to define many more before you "flip the switch" to turn on access\ncontrols. We are going to turn on access controls now, using the following\ncommands:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap mod become admpoint 'o=Foobar' -z -a -u\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"-z")," option will make this administrative point an autonomous administrative\npoint. (It should already be autonomous, though. The X.500 specifications\nrequire that all first-level DSEs are autonomous administrative points, so\nMeerkat DSA automatically adds the autonomous administrative role to first-level\nDSEs created without an ",(0,i.kt)("inlineCode",{parentName:"p"},"administrativeRole")," attribute.) The ",(0,i.kt)("inlineCode",{parentName:"p"},"-a")," option will\nmake this an access control administrative point for an Access Control Specific\nArea (ACSA). The ",(0,i.kt)("inlineCode",{parentName:"p"},"-u")," option will make this a subschema administrative area,\nwhich will be useful shortly."),(0,i.kt)("p",null,"Finally, there is one more step to turn on access controls: add an access\ncontrol scheme attribute to the administrative point by using this command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap mod add acs 'o=Foobar' 2.5.28.1\n")),(0,i.kt)("p",null,"This adds an access control scheme of ",(0,i.kt)("inlineCode",{parentName:"p"},"2.5.28.1")," to this administrative point,\nwhich enables the Basic Access Control detailed in ITU Recommendation X.501."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Because we enabled access controls, and we only defined ACI items for the\n",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar")," user, no other users will be able to do ",(0,i.kt)("em",{parentName:"p"},"anything")," in this Access\nControl Administrative Area (ACSA) unless the administrator, ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar")," adds\nmore ACI items to allow it."))),(0,i.kt)("p",null,"Because you enabled access controls, you will need to change your X.500\nconfiguration file to authenticate as ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar")," with a password instead of\nanonymously. You will not be able to do anything otherwise."),(0,i.kt)("h2",{id:"creating-schema"},"Creating Schema"),(0,i.kt)("p",null,"Just because you are logged in as a user whose access controls permit you to do\n",(0,i.kt)("em",{parentName:"p"},"anything")," does not ",(0,i.kt)("em",{parentName:"p"},"really")," mean that you can do anything. You are still\ngoverned by schema rules, and since you did not define any DIT structure rules,\nyou cannot add any entries beneath ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar"),", nor assign any auxiliary object\nclasses to any entries, nor use contexts, etc. Fortunately, ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar")," has the\npermissions needed to change this."),(0,i.kt)("p",null,"We are going to create a new subentry for the subschema."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Technically, there is\nno reason you could not use the access control subentry for this, but we named\nthis subentry \"Access Control,\" so it would be a misleading name if we also put\nour subschema in there. Also, it is a requirement of the X.500 specifications\nthat subschema administrative areas apply to the whole area (e.g. the subtree\nspecification has to have 0 minimum, no maximum, no chops, no refinements, and\nan empty base), which means that, if we changed or added a subtree to our access\ncontrol subentry, it would make our subschema non-compliant. (Technically,\nMeerkat DSA just ignores the subtree specifications for subschema subentries, so\nthis shouldn't be a problem for Meerkat DSA, but you don't want to be\nnon-compliant, do you?)"))),(0,i.kt)("p",null,"Run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap add subentry 'o=Foobar,cn=Subschema' --commonName='Subschema'\n")),(0,i.kt)("p",null,"Now, we want to make this a subschema subentry, so run this command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap mod become subschema 'o=Foobar,cn=Subschema'\n")),(0,i.kt)("p",null,"Now, we can get to business. You could define your own name forms, but we are\njust going to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"orgNameForm")," that comes installed in Meerkat DSA by\ndefault, so we just need to define a DIT structure rule to use it. Run this\ncommand to define a DIT structure rule that applies to the administrative point:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap mod add sr 'o=Foobar,cn=Subschema' 1 2.5.15.3\n")),(0,i.kt)("p",null,"The command above defines a DIT structure rule with ID 1 that applies to an\nadministrative point with the name form identified by the object identifier\n",(0,i.kt)("inlineCode",{parentName:"p"},"2.5.15.3"),". This object identifier is for ",(0,i.kt)("inlineCode",{parentName:"p"},"orgNameForm"),". Since this name form\nconforms to what we named our administrative point, and since this DIT structure\nrule names no superior structure rules, this structure rule applies to the\nadministrative point ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar"),", which will set the ",(0,i.kt)("em",{parentName:"p"},"governing structure rule"),"\nfor ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar"),". Now that ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar")," has a governing structure rule, you can\nplace other entries beneath it once you define other structure rules that permit\nthem."),(0,i.kt)("p",null,"Run this command to permit the creation of an ",(0,i.kt)("inlineCode",{parentName:"p"},"organizationalPerson")," with the\nname form ",(0,i.kt)("inlineCode",{parentName:"p"},"orgPersonNameForm")," beneath ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap mod add sr 'o=Foobar,cn=Subschema' 2 2.5.15.6 -s 1\n")),(0,i.kt)("p",null,"The above command will create a structure rule with an ID of 2. The object\nidentifier ",(0,i.kt)("inlineCode",{parentName:"p"},"2.5.15.6")," is for ",(0,i.kt)("inlineCode",{parentName:"p"},"orgPersonNameForm"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"-s 1")," says that this\nstructure rule may permit entries under another entry whose governing structure\nrule is 1 (which is our administrative point, ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar"),", in this case)."),(0,i.kt)("p",null,"That should be sufficient for our simple use case, but in a real DIT, you would\nprobably want to define many more structure rules, as well as content rules,\ncontext use rules, matching rule uses, etc."),(0,i.kt)("h2",{id:"creating-users"},"Creating Users"),(0,i.kt)("p",null,"Now, we need to have a heart-to-heart: the schema specified in the X.500\nspecifications is not perfect. Notably, the schema for an organizational person\ndoes not permit an email address, which is required by Gitea. Also, none of\nthese attributes are really suitable for storing a username. This means that\nwe are going to have to abuse these attributes' meanings and store email\naddresses and usernames where they do not belong. Again, this is just a\ntutorial, and you should define proper schema that does use the correct\nattribute types."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"In the very near future, Meerkat DSA will introduce a LOT more pre-installed\nschema, including the ",(0,i.kt)("inlineCode",{parentName:"p"},"inetOrgPerson")," object class widely uses in LDAP servers.\nThis object class would be a great choice for this use case, if you can wait."))),(0,i.kt)("p",null,"For our purposes, we are going to abuse the ",(0,i.kt)("inlineCode",{parentName:"p"},"commonName")," attribute to store the\nuser's username and the ",(0,i.kt)("inlineCode",{parentName:"p"},"title")," attribute to store their email address."),(0,i.kt)("p",null,"Now we can create this troublesome organizational user by running this command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap add op 'o=Foobar,cn=cnorris' \\\n  --commonName='cnorris' \\\n  --surname='Norris' \\\n  --title='cnorris@gmail.com'\n")),(0,i.kt)("p",null,"If that command succeeded, we can now set the password for this user:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"x500 dap apw 'o=Foobar,cn=cnorris'\n")),(0,i.kt)("p",null,"And that's it for the Meerkat DSA setup. Now we can configure Gitea to search\nfor users under ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar"),"!"),(0,i.kt)("h2",{id:"gitea-configuration"},"Gitea Configuration"),(0,i.kt)("p",null,"If you installed Gitea via the\n",(0,i.kt)("a",{parentName:"p",href:"https://gitea.com/gitea/helm-chart/"},"Helm chart"),", there should already be an\nadmin user, whose credentials can be found in the ",(0,i.kt)("inlineCode",{parentName:"p"},"values.yaml")," file in the\nlinked repository (unless you overwrote them when you ran ",(0,i.kt)("inlineCode",{parentName:"p"},"helm"),'). Log in as\nthis user and click on the profile picture in the top right. Select\n"Site Administration" from the dropdown. Open the "Authentication Sources" tab.\nClick on "Add Authentication Source."'),(0,i.kt)("p",null,'In the Authentication Type dropdown, select "LDAP (via BindDN)." Give it a name,\nand specify the hostname and port of your Meerkat DSA instance. Your Bind DN\nshould be ',(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar"),". Your password should be the password you set for\n",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar"),". User search base should be ",(0,i.kt)("inlineCode",{parentName:"p"},"o=Foobar"),"."),(0,i.kt)("p",null,"Your search filter should be ",(0,i.kt)("inlineCode",{parentName:"p"},"(&(objectClass=organizationalPerson)(cn=%s))"),".\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"%s")," gets replaced with the username, so if you type in ",(0,i.kt)("inlineCode",{parentName:"p"},"cnorris")," on the\nlogin page, Gitea will search for an entry with object class\n",(0,i.kt)("inlineCode",{parentName:"p"},"organizationalPerson")," and with a common name of ",(0,i.kt)("inlineCode",{parentName:"p"},"cnorris"),"."),(0,i.kt)("p",null,"For the other settings:"),(0,i.kt)("p",null,"Username Attribute: ",(0,i.kt)("inlineCode",{parentName:"p"},"cn"),"\nFirst Name Attribute: ",(0,i.kt)("inlineCode",{parentName:"p"},"cn"),"\nSurname Attribute: ",(0,i.kt)("inlineCode",{parentName:"p"},"sn"),"\nEmail Attribute: ",(0,i.kt)("inlineCode",{parentName:"p"},"title")),(0,i.kt)("p",null,"And that's it! Save the authentication source and log in using the username\n",(0,i.kt)("inlineCode",{parentName:"p"},"cnorris")," and the password you created in Meerkat DSA for this user. Congrats on\nmaking it this far!"))}u.isMDXComponent=!0}}]);