"use strict";(self.webpackChunkdirectory=self.webpackChunkdirectory||[]).push([[6350],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=i,f=p["".concat(l,".").concat(h)]||p[h]||u[h]||a;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8610:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],s={},l="Attribute Certificates",c={unversionedId:"attr-cert",id:"attr-cert",title:"Attribute Certificates",description:"The attrCertReq Extension",source:"@site/docs/attr-cert.md",sourceDirName:".",slug:"/attr-cert",permalink:"/directory/docs/attr-cert",draft:!1,editUrl:"https://github.com/Wildboar-Software/directory/edit/main/website/docs/attr-cert.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Zonal Matching",permalink:"/directory/docs/zonal"},next:{title:"Conformance",permalink:"/directory/docs/conformance"}},d={},p=[{value:"The attrCertReq Extension",id:"the-attrcertreq-extension",level:2}],u={toc:p},h="wrapper";function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)(h,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"attribute-certificates"},"Attribute Certificates"),(0,a.kt)("h2",{id:"the-attrcertreq-extension"},"The attrCertReq Extension"),(0,a.kt)("p",null,"In Meerkat DSA, a special private extension has been added to the ",(0,a.kt)("inlineCode",{parentName:"p"},"read"),"\noperation--specifically, the ",(0,a.kt)("inlineCode",{parentName:"p"},"ReadArgumentData")," fields--called ",(0,a.kt)("inlineCode",{parentName:"p"},"attrCertReq"),".\nIt has the following ASN.1 syntax:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-asn1"},"AttrCertReq ::= [PRIVATE 0] EXPLICIT SET {\n    singleUse   [0] EXPLICIT BOOLEAN OPTIONAL,\n    noAssertion [1] EXPLICIT BOOLEAN OPTIONAL,\n    asn1keep    NULL OPTIONAL,\n    ...\n}\n")),(0,a.kt)("p",null,"If supplied in the ",(0,a.kt)("inlineCode",{parentName:"p"},"ReadArgumentData"),", the DSA--if it recognizes this\nextension--should return an X.509 attribute certificate that it signs with its\nown signing key, containing the exact set of attributes that are returned from\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," operation. In Meerkat DSA, any attribute types (meaning just the\ntype and no values) that are returned will be filtered out, but this may change\nin the future and should not be considered an expected behavior: the obvious\nalternative would be to return a ",(0,a.kt)("inlineCode",{parentName:"p"},"Attribute"),"s with an empty set of values."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The rationale for this being supported only in the ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," operation, and not\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"search")," operation, is that it could be very computationally expensive to\nproduce an attribute certificate for every search result for a large set of\nsearch results, and it could therefore open up Meerkat DSA to denial-of-service\nattacks whereby it is overwhelmed with requests to produce attribute\ncertificates for a very large number of results. It is better for this\nextension to be reserved for ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," only.")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"issuer")," field will be populated with the DSA's AE-title, which is taken\nfrom the signing key in Meerkat DSA. The ",(0,a.kt)("inlineCode",{parentName:"p"},"holder")," field will use a single\n",(0,a.kt)("inlineCode",{parentName:"p"},"entityName")," using the ",(0,a.kt)("inlineCode",{parentName:"p"},"directoryName")," alternative, using an ",(0,a.kt)("inlineCode",{parentName:"p"},"rdnSequence")," that\ncontains the distinguished name of the entry targeted by the ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," operation\n(after aliases have been resolved)."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"In the future, there may be another extension to the above to use an unresolved\nalias name in the holder field, but this could be a security risk: if\nimplemented incorrectly, it means that Meerkat DSA could sign attribute\ncertificates that impute attributes to the wrong entity!")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"attrCertValidityPeriod")," field shall have its ",(0,a.kt)("inlineCode",{parentName:"p"},"notBeforeTime")," set to the\nmoment the request is made (or around that time), and the ",(0,a.kt)("inlineCode",{parentName:"p"},"notAfterTime")," shall\nbe set to a time that is controlled by the DSA: preferrably a very short amount\nof time in comparison to normal X.509 public key certificate durations, such as\nan hour or a day. In Meerkat DSA, the duration of the attribute certificate is\ncontrolled by the\n",(0,a.kt)("a",{parentName:"p",href:"/directory/docs/env#meerkat_attr_cert_duration"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_ATTR_CERT_DURATION")),"\nconfiguration option."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The rationale for wanting a lower duration for attribute certificates is that,\nassuming the directory does not have availability problems, new attribute\ncertificates can be requested as needed as the old ones expire: this differs\nfrom the issuance of public key certificates, which usually entail some ordeal\nto prove one's identity."),(0,a.kt)("p",{parentName:"admonition"},"On the other hand, if attribute certificate validities are too long, there is a\nrisk of the contents of the attribute certificate being out of sync with what is\nin the directory. For example, if a person was a member in a group when an\nattribute certificate with a validity duration of five years was issued, but the\nuser's membership was revoked shortly thereafter, the user would be able to\ncredibly assert to third parties that the user is still in the group for the\nremaining five years! Worse yet, Meerkat DSA has no means (currently) to produce\nattribute certificate revocation lists or add attribute certificates to them,\nmaking it difficult to revoke them!")),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"singleUse")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"TRUE"),", the DSA shall insert a ",(0,a.kt)("inlineCode",{parentName:"p"},"singleUse")," extension into the\nattribute certificate's extensions. If ",(0,a.kt)("inlineCode",{parentName:"p"},"noAssertion")," is ",(0,a.kt)("inlineCode",{parentName:"p"},"TRUE"),", the DSA shall\ninsert a ",(0,a.kt)("inlineCode",{parentName:"p"},"noAssertion")," extension into the attribute certificate's extensions. A\nDSA that supports this feature may still insert these extensions unless these\nfields are explicitly set to ",(0,a.kt)("inlineCode",{parentName:"p"},"FALSE"),", indicating that the user is requesting\nthat these extensions be excluded from the attribute certificate."),(0,a.kt)("p",null,"In general, the same authorization required to receive signed results shall\napply to receiving an attribute certificate, since the two are so similar in\nconcept."),(0,a.kt)("p",null,"If the DSA chooses not to produce an attribute certificate (say, because of\ninsufficient authorization for the requesting user) or a lack of a configured\nsigning key, or fails in producing this attribute certificate, the DSA shall\nsimply return a normal ",(0,a.kt)("inlineCode",{parentName:"p"},"read")," result. If the request was honored, the bytes of\nthe attribute certificate shall be added to a private extension in the\n",(0,a.kt)("inlineCode",{parentName:"p"},"ReadResultData")," having the following syntax:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-asn1"},"    attrCert  [PRIVATE 0] IMPLICIT OCTET STRING OPTIONAL\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The rationale for returning the attribute certificate as an octet string is to\nprevent a re-encoding from producing a different ",(0,a.kt)("inlineCode",{parentName:"p"},"toBeSigned")," encoding that\nwould result in an invalidated signature; in other words, its purpose is to\npreserve the exact bytes and signature value of the attribute certificate, even\nif the directory uses BER or some other set of encoding rules to transmit ASN.1\ndata.")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"asn1keep")," field is just a meaningless field that can be added to the\n",(0,a.kt)("inlineCode",{parentName:"p"},"AttrCertReq")," to ensure that ",(0,a.kt)("inlineCode",{parentName:"p"},"AttrCertReq")," is not elided from the encoded ",(0,a.kt)("inlineCode",{parentName:"p"},"read"),"\nargument. Some ASN.1 libraries, such as Golang's ",(0,a.kt)("inlineCode",{parentName:"p"},"encoding/asn1"),' remove nested\nstructures from the final encoded message if all of the fields of that structure\nevaluate to "falsy." Adding ',(0,a.kt)("inlineCode",{parentName:"p"},"asn1keep")," to the message can ensure that it gets\nencoded. Meerkat DSA will not use or care about this field at all."))}f.isMDXComponent=!0}}]);