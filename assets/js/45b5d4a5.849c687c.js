"use strict";(self.webpackChunkdirectory=self.webpackChunkdirectory||[]).push([[8141],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5474:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={},l="Networking",c={unversionedId:"networking",id:"networking",title:"Networking",description:"Preface on Directory Protocols",source:"@site/docs/networking.md",sourceDirName:".",slug:"/networking",permalink:"/directory/docs/networking",draft:!1,editUrl:"https://github.com/Wildboar-Software/directory/edit/main/website/docs/networking.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Schema Administration",permalink:"/directory/docs/schema"},next:{title:"Transport Layer Security (TLS)",permalink:"/directory/docs/tls"}},p={},u=[{value:"Preface on Directory Protocols",id:"preface-on-directory-protocols",level:2},{value:"Directory Transport Protocols",id:"directory-transport-protocols",level:2},{value:"Distributed Operation",id:"distributed-operation",level:2},{value:"DNS Configuration",id:"dns-configuration",level:2},{value:"DNS Records",id:"dns-records",level:3},{value:"DNS Client",id:"dns-client",level:3},{value:"The Future",id:"the-future",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"networking"},"Networking"),(0,a.kt)("h2",{id:"preface-on-directory-protocols"},"Preface on Directory Protocols"),(0,a.kt)("p",null,"In TCP/IP networking, there is generally a one-to-one correspondence between a\nTCP port and a protocol. You don't usually listen on a given TCP port for, say,\nboth HTTP and FTP and SSH traffic. In directory systems, network transport is\nlogically separated from the ",(0,a.kt)("em",{parentName:"p"},"session"),', such that you can reuse the same\ntransport connection to relay multiple protocols. Hence, to clarify the use of\nterminology here, a "transport" means the stack of protocols by which two\nhosts are networked and X.500 operations are relayed between them, and an\n"association" is a logical connection established by a bind operation that is\ntransported over a "transport." Within the same transport, multiple associations\nmay be made serially (but not in parallel), via binding and unbinding.'),(0,a.kt)("p",null,'This means that, when Meerkat DSA listens for IDM transport on a given TCP port,\nDAP, DOP, DISP, and DSP associations may be established using IDM transport on\nthat TCP port. This defies the usual "one-port-per-service" model often used by\nTCP/IP services.'),(0,a.kt)("p",null,"Note that the above does ",(0,a.kt)("em",{parentName:"p"},"not"),' apply to LDAP, since LDAP is ALWAYS transported\nover "raw" TCP without IDM, ITOT, or any other OSI transport mechanism layered\non top.'),(0,a.kt)("h2",{id:"directory-transport-protocols"},"Directory Transport Protocols"),(0,a.kt)("p",null,"Currently, Meerkat DSA only supports the transport of X.500 protocols via IDM\nor IDMS (IDM encapsulated in TLS).\nLDAP may be used as well, and may be optionally encapsulated in TLS. For both\ncategories of protocols, StartTLS may be used as well."),(0,a.kt)("p",null,"The protocols which Meerkat DSA uses can be controlled by the following\nenvironment variables, which specify the port number on which these services\nlisten:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MEERKAT_WEB_ADMIN_PORT")," (Recommended: 18080; be careful when exposing this.)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MEERKAT_IDM_PORT")," (Recommended: 4632)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MEERKAT_IDMS_PORT")," (Recommended: 44632)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MEERKAT_LDAP_PORT")," (Recommended: 389; requires root privileges)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"MEERKAT_LDAPS_PORT")," (Recommended: 636; requires root privileges)")),(0,a.kt)("p",null,"If a port number is set, Meerkat DSA listens on that port for the given service.\nIf no port is set, that service does not listen at all. This means that it is\npossible to run Meerkat DSA as an LDAP-only or X.500-only server by simply\nnot configuring ports for those services."),(0,a.kt)("h2",{id:"distributed-operation"},"Distributed Operation"),(0,a.kt)("p",null,"For distributed operations, Meerkat DSA stores the access points obtained from\nknowledge attributes in the ",(0,a.kt)("inlineCode",{parentName:"p"},"AccessPoint")," table. Currently, Meerkat DSA can only\nmake use of IDM-based (and IDMS-based) access points. All other access points\nwill be ignored."),(0,a.kt)("p",null,"You may directly alter the rows in the ",(0,a.kt)("inlineCode",{parentName:"p"},"AccessPoint"),' table to add or remove\naccess points, but Meerkat DSA may have to be restarted for your changes to\ntake effect. (We say "may" literally: it might not require a restart if you are\nnot using in-memory caching of the DIT.) It is recommended that you instead use\nthe Directory Access Protocol with the ',(0,a.kt)("inlineCode",{parentName:"p"},"manageDSAIT")," flag set to modify\nknowledge attributes rather than altering the database directly."),(0,a.kt)("h2",{id:"dns-configuration"},"DNS Configuration"),(0,a.kt)("h3",{id:"dns-records"},"DNS Records"),(0,a.kt)("p",null,"It is not necessary at all, but for the sake of service discovery, it is\nrecommended that you configure DNS for your domain to name your directory as\na service using ",(0,a.kt)("inlineCode",{parentName:"p"},"SRV")," records. If you want to keep your directory a secret, it\nis advised that you refrain from exposing it to the global Internet at all."),(0,a.kt)("p",null,"SRV records should be defined for IDM, IDMS, LDAP, and LDAPS like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"_idm._tcp.example.com 3600 IN SRV 0 5 <IDM port number> dsa01.example.com\n_idms._tcp.example.com 3600 IN SRV 0 5 <IDMS port number> dsa01.example.com\n_ldap._tcp.example.com 3600 IN SRV 0 5 <LDAP port number> dsa01.example.com\n_ldaps._tcp.example.com 3600 IN SRV 0 5 <LDAPS port number> dsa01.example.com\n")),(0,a.kt)("p",null,"Note that, in the above example you will need to swap out ",(0,a.kt)("inlineCode",{parentName:"p"},"example.com")," with\nyour domain, ",(0,a.kt)("inlineCode",{parentName:"p"},"dsa01")," with your DSA's host name, the port numbers enclosed in\nbrackets above and configure the other SRV record parameters as you see fit."),(0,a.kt)("p",null,"You will also need A and/or AAAA records corresponding to the hostnames on the\nright hand side of the SRV records."),(0,a.kt)("p",null,"Again, DNS configuration is NOT required for Meerkat DSA to work."),(0,a.kt)("h3",{id:"dns-client"},"DNS Client"),(0,a.kt)("p",null,"Meerkat DSA runs on NodeJS, which uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"c-ares")," library under the hood.\nNodeJS does not expose any functionality for tuning DNS resolution. Fortunately,\nyou can tune it using the ",(0,a.kt)("inlineCode",{parentName:"p"},"RES_OPTIONS")," environment variable, which is\ndocumented ",(0,a.kt)("a",{parentName:"p",href:"https://manpages.ubuntu.com/manpages/kinetic/en/man3/ares_init_options.3.html"},"here"),"."),(0,a.kt)("p",null,"You generally should not mess with this unless you're seeing DNS resolution\nissues. I have personally seen this happen when I change networks while still\nconnected to a VPN, but I think this is a pretty uncommon issue."),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/45403565/6562635"},"this StackOverflow answer"),"\nfor help."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This is liable to change if ",(0,a.kt)("a",{parentName:"p",href:"https://bun.sh/"},"Bun")," proves to be a viable NodeJS\nalternative. I do not know what it uses for DNS under the hood.")),(0,a.kt)("h2",{id:"the-future"},"The Future"),(0,a.kt)("p",null,"In the future, Meerkat DSA may support:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"TOR / Onion Routing / SOCKS Transport"),(0,a.kt)("li",{parentName:"ul"},"ZMQ Transport"),(0,a.kt)("li",{parentName:"ul"},"ITOT Transport"),(0,a.kt)("li",{parentName:"ul"},"LPP Transport")))}m.isMDXComponent=!0}}]);