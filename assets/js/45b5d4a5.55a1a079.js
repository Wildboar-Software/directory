"use strict";(self.webpackChunkdirectory=self.webpackChunkdirectory||[]).push([[141],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,y=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(y,a(a({ref:t},p),{},{components:r})):n.createElement(y,a({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5474:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],l={},s="Networking",c={unversionedId:"networking",id:"networking",title:"Networking",description:"Directory Protocols",source:"@site/docs/networking.md",sourceDirName:".",slug:"/networking",permalink:"/directory/docs/networking",editUrl:"https://github.com/Wildboar-Software/directory/edit/main/website/docs/networking.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Schema Administration",permalink:"/directory/docs/schema"},next:{title:"Transport Layer Security (TLS)",permalink:"/directory/docs/tls"}},p=[{value:"Directory Protocols",id:"directory-protocols",children:[],level:2},{value:"Distributed Operation",id:"distributed-operation",children:[],level:2},{value:"DNS Configuration",id:"dns-configuration",children:[],level:2},{value:"The Future",id:"the-future",children:[],level:2}],u={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"networking"},"Networking"),(0,i.kt)("h2",{id:"directory-protocols"},"Directory Protocols"),(0,i.kt)("p",null,"Currently, Meerkat DSA only supports the transport of X.500 protocols via IDM\nor IDMS (IDM encapsulated in TLS).\nLDAP may be used as well, and may be optionally encapsulated in TLS. For both\ncategories of protocols, StartTLS may be used as well."),(0,i.kt)("p",null,"The protocols which Meerkat DSA uses can be controlled by the following\nenvironment variables, which specify the port number on which these services\nlisten:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MEERKAT_WEB_ADMIN_PORT")," (Recommended: 18080; be careful when exposing this.)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MEERKAT_IDM_PORT")," (Recommended: 4632)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MEERKAT_IDMS_PORT")," (Recommended: 44632)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MEERKAT_LDAP_PORT")," (Recommended: 389; requires root privileges)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MEERKAT_LDAPS_PORT")," (Recommended: 636; requires root privileges)")),(0,i.kt)("p",null,"If a port number is set, Meerkat DSA listens on that port for the given service.\nIf no port is set, that service does not listen at all. This means that it is\npossible to run Meerkat DSA as an LDAP-only or X.500-only server by simply\nnot configuring ports for those services."),(0,i.kt)("h2",{id:"distributed-operation"},"Distributed Operation"),(0,i.kt)("p",null,"For distributed operations, Meerkat DSA stores the access points obtained from\nknowledge attributes in the ",(0,i.kt)("inlineCode",{parentName:"p"},"AccessPoint")," table. Currently, Meerkat DSA can only\nmake use of IDM-based (and IDMS-based) access points. All other access points\nwill be ignored."),(0,i.kt)("p",null,"You may directly alter the rows in the ",(0,i.kt)("inlineCode",{parentName:"p"},"AccessPoint"),' table to add or remove\naccess points, but Meerkat DSA may have to be restarted for your changes to\ntake effect. (We say "may" literally: it might not require a restart if you are\nnot using in-memory caching of the DIT.) It is recommended that you instead use\nthe Directory Access Protocol with the ',(0,i.kt)("inlineCode",{parentName:"p"},"manageDSAIT")," flag set to modify\nknowledge attributes rather than altering the database directly."),(0,i.kt)("h2",{id:"dns-configuration"},"DNS Configuration"),(0,i.kt)("p",null,"It is not necessary at all, but for the sake of service discovery, it is\nrecommended that you configure DNS for your domain to name your directory as\na service using ",(0,i.kt)("inlineCode",{parentName:"p"},"SRV")," records. If you want to keep your directory a secret, it\nis advised that you refrain from exposing it to the global Internet at all."),(0,i.kt)("p",null,"SRV records should be defined for IDM, IDMS, LDAP, and LDAPS like so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"_idm._tcp.example.com 3600 IN SRV 0 5 <IDM port number> dsa01.example.com\n_idms._tcp.example.com 3600 IN SRV 0 5 <IDMS port number> dsa01.example.com\n_ldap._tcp.example.com 3600 IN SRV 0 5 <LDAP port number> dsa01.example.com\n_ldaps._tcp.example.com 3600 IN SRV 0 5 <LDAPS port number> dsa01.example.com\n")),(0,i.kt)("p",null,"Note that, in the above example you will need to swap out ",(0,i.kt)("inlineCode",{parentName:"p"},"example.com")," with\nyour domain, ",(0,i.kt)("inlineCode",{parentName:"p"},"dsa01")," with your DSA's host name, the port numbers enclosed in\nbrackets above and configure the other SRV record parameters as you see fit."),(0,i.kt)("p",null,"You will also need A and/or AAAA records corresponding to the hostnames on the\nright hand side of the SRV records."),(0,i.kt)("p",null,"Again, DNS configuration is NOT required for Meerkat DSA to work."),(0,i.kt)("h2",{id:"the-future"},"The Future"),(0,i.kt)("p",null,"In the future, Meerkat DSA may support:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"TOR / Onion Routing / SOCKS Transport"),(0,i.kt)("li",{parentName:"ul"},"ZMQ Transport"),(0,i.kt)("li",{parentName:"ul"},"ITOT Transport"),(0,i.kt)("li",{parentName:"ul"},"LPP Transport")))}d.isMDXComponent=!0}}]);