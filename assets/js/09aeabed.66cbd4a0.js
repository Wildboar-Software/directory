"use strict";(self.webpackChunkdirectory=self.webpackChunkdirectory||[]).push([[5047],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),u=r,g=p["".concat(l,".").concat(u)]||p[u]||h[u]||a;return n?i.createElement(g,o(o({ref:t},c),{},{components:n})):i.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var d=2;d<a;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8665:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>d,toc:()=>p});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),o=["components"],s={},l="Signed Operations",d={unversionedId:"signing",id:"signing",title:"Signed Operations",description:"Meerkat DSA fully supports signed arguments, results, and errors as described in",source:"@site/docs/signing.md",sourceDirName:".",slug:"/signing",permalink:"/directory/docs/signing",draft:!1,editUrl:"https://github.com/Wildboar-Software/directory/edit/main/website/docs/signing.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Online PKI",permalink:"/directory/docs/online-pki"},next:{title:"Operational Bindings",permalink:"/directory/docs/opbinding"}},c={},p=[{value:"What is Signing?",id:"what-is-signing",level:2},{value:"Configuring Signing",id:"configuring-signing",level:2},{value:"Verification of Signed Data",id:"verification-of-signed-data",level:2},{value:"Authorization for Signed Results and Errors",id:"authorization-for-signed-results-and-errors",level:2},{value:"How to Request Signed Results or Errors",id:"how-to-request-signed-results-or-errors",level:2},{value:"How Signing Affects Pagination and Chaining",id:"how-signing-affects-pagination-and-chaining",level:2},{value:"Signing of Bind Results",id:"signing-of-bind-results",level:2},{value:"Implementation",id:"implementation",level:2}],h={toc:p},u="wrapper";function g(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)(u,(0,i.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"signed-operations"},"Signed Operations"),(0,a.kt)("p",null,"Meerkat DSA fully supports signed arguments, results, and errors as described in\n",(0,a.kt)("a",{parentName:"p",href:"https://www.itu.int/rec/T-REC-X.501-201910-I/en"},"ITU Recommendation X.501 (2019)"),',\nSection 17.3, simply referred to in this documentation as "signing."'),(0,a.kt)("h2",{id:"what-is-signing"},"What is Signing?"),(0,a.kt)("p",null,"In addition to the point-to-point security provided by TLS, X.500 directories\nensure the integrity of data as it is relayed from DSA to DSA via cryptographic\nsignatures applied to results or errors. Since, by design, a DSA might be an\nintermediary between a client and another DSA, it is necessary for signing to\nexist to ensure that the intermediate DSA can spoof results or errors that it\nclaims to have originated from another DSA. To be clear, TLS only provides\nconfidentiality and integrity of data transfered between one server to another,\nbut not for the data that is ",(0,a.kt)("em",{parentName:"p"},"relayed")," between servers, thereby necessitating\nsigning. TLS provides point-to-point confidentiality and integrity. Signing\nprovides end-to-end integrity, but not confidentiality."),(0,a.kt)("h2",{id:"configuring-signing"},"Configuring Signing"),(0,a.kt)("p",null,"Signing is configured, like ",(0,a.kt)("a",{parentName:"p",href:"/directory/docs/env"},"all other configuration options"),", by\nenvironment variables. The environment variables used for configuring signing\nstart with ",(0,a.kt)("inlineCode",{parentName:"p"},"MEERKAT_SIGNING_"),". You will notice some that start with\n",(0,a.kt)("inlineCode",{parentName:"p"},"MEERKAT_SIGNING_BIND_"),'; these variables are what is referred to as "bind\noverrides," which are discussed ',(0,a.kt)("a",{parentName:"p",href:"/directory/docs/env#tls-and-signing-options"},"here"),"."),(0,a.kt)("p",null,"At minimum, you MUST define a\n",(0,a.kt)("a",{parentName:"p",href:"/directory/docs/env#meerkatsigningcertschainfile"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_CERTS_CHAIN_FILE"))," and\n",(0,a.kt)("a",{parentName:"p",href:"/directory/docs/env#meerkatsigningkeyfile"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_KEY_FILE"))," to enable signing.\nNotably, Meerkat DSA determines its Application Entity Title (AE-Title) from the\nsigning certificate. (NOT the TLS certificate.)"),(0,a.kt)("p",null,"You will probably also want to define a separate set of trust anchors for\nsigning than for TLS. You can do this via the\n",(0,a.kt)("a",{parentName:"p",href:"/directory/docs/env#meerkatsigningcafile"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_CA_FILE"))," and\n",(0,a.kt)("a",{parentName:"p",href:"/directory/docs/env#meerkattrustanchorsfile"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_TRUST_ANCHORS_FILE"))," environment\nvariables."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"If you do not configure signing trust anchors, the same trust anchors used for\nTLS will be used to verify digital signatures on arguments, results, and errors.")),(0,a.kt)("p",null,"By default, Meerkat DSA will check neither remote CRLs (given in an X.509\ncertificate's ",(0,a.kt)("inlineCode",{parentName:"p"},"cRLDistributionPoints")," extension) nor OCSP responders for the\nvalidity of a certificate used in signing unless these are turned on using the\n",(0,a.kt)("a",{parentName:"p",href:"/directory/docs/env#meerkatsigningremotecrlcheckiness"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_REMOTE_CRL_CHECKINESS")),"\nand ",(0,a.kt)("a",{parentName:"p",href:"/directory/docs/env#meerkatsigningocspcheckiness"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_OCSP_CHECKINESS")),"\noptions. Before enabling these, you should understand the\n",(0,a.kt)("a",{parentName:"p",href:"/directory/docs/online-pki#ocsp-and-remote-crls"},"pros and cons of doing so"),"."),(0,a.kt)("h2",{id:"verification-of-signed-data"},"Verification of Signed Data"),(0,a.kt)("p",null,"Any client can submit signed arguments, and DSAs with which Meerkat DSA\nassociates may return signed results or errors, provided that the operation\nitself permits such signed alternatives. If the\n",(0,a.kt)("a",{parentName:"p",href:"/directory/docs/env#meerkatsigningdisableverification"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_DISABLE_VERIFICATION")),"\nconfiguration option is enabled (set to ",(0,a.kt)("inlineCode",{parentName:"p"},"1"),"), these signature will NOT be\nverified, nor the presented certification path; otherwise, the presented\nsignature will be verified in accordance with\n",(0,a.kt)("a",{parentName:"p",href:"https://www.itu.int/rec/T-REC-X.509-201910-I/en"},"ITU Recommendation X.509 (2019)"),",\nSection 6, and the presented certification path will be verified in accordance\nwith\n",(0,a.kt)("a",{parentName:"p",href:"https://www.itu.int/rec/T-REC-X.509-201910-I/en"},"ITU Recommendation X.509 (2019)"),",\nSection 12."),(0,a.kt)("p",null,"The certification path verification procedures are almost identical--if not\nactually identical--to those described in\n",(0,a.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc5280.html"},"IETF RFC 5280"),"."),(0,a.kt)("h2",{id:"authorization-for-signed-results-and-errors"},"Authorization for Signed Results and Errors"),(0,a.kt)("p",null,"Production of digital signatures can be computationally expensive, especially\nif a DSA is getting overwhelmed by a large number of requests, which means that\nthe production of signed results and errors can be a vector of attack for\nhackers looking to intentionally overwhelm your DSA to make it unusable\n(a ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Denial-of-service_attack"},"denial-of-service attack"),")."),(0,a.kt)("p",null,"Also, the cryptographic entropy that can be used in the production of digital\nsignatures\n",(0,a.kt)("a",{parentName:"p",href:"https://superuser.com/questions/944510/why-am-i-constantly-running-out-of-entropy"},"can be exhausted"),",\nand, to the extent that results can be controlled by a user, they can be vectors\nfor ",(0,a.kt)("a",{parentName:"p",href:"https://www.crypto-it.net/eng/attacks/chosen-plaintext.html"},"chosen plaintext attacks"),"."),(0,a.kt)("p",null,"For this reason, it may be desirable to limit who can receive signed results and\nerrors. Meerkat DSA allows you to define a minimum threshold for authentication\nthat a user must achieve to receive signed results or errors. Note that, in\naddition to meeting this level of authentication, this user will also have to\n",(0,a.kt)("em",{parentName:"p"},"request")," signed results or errors: X.500 directory systems are not supposed to\nreturn signed results or errors unless they are requested. How signed results\nor errors are requested is discussed later."),(0,a.kt)("p",null,"Meerkat DSA also allows you to define a different threshold of authentication\njust for receiving signed errors. This may differ from the threshold for\nreceiving signed results. If not explicitly configured, this threshold will be\nthe same as it is for receiving signed results. It may be desirable to configure\na more stringent threshold of authentication for receiving signed errors than\nsigned results, since a ",(0,a.kt)("em",{parentName:"p"},"result")," generally means that something went well, as\nopposed to an error. The presence of a lot of errors may indicate a hacking\nattempt, and we don't want to waste precious resources doing favors for hackers,\ndo we?"),(0,a.kt)("p",null,"The overall authentication requirements for receiving signed results and errors\ncomes from these environment variables:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/directory/docs/env#meerkatsigningminauthlevel"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_MIN_AUTH_LEVEL"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/directory/docs/env#meerkatsigningminauthlocalqualifier"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_MIN_AUTH_LOCAL_QUALIFIER"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/directory/docs/env#meerkatsigningminauthsigned"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_MIN_AUTH_SIGNED")))),(0,a.kt)("p",null,"These variables correspond to values of the ",(0,a.kt)("inlineCode",{parentName:"p"},"AuthenticationLevel")," data\nstructure defined in\n",(0,a.kt)("a",{parentName:"p",href:"https://www.itu.int/rec/T-REC-X.501/en"},"ITU Recommendation X.501 (2019)"),",\nSection 18.4.2.3, which is depicted below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-asn1"},"\nAuthenticationLevel ::= CHOICE {\n  basicLevels     SEQUENCE {\n    level           ENUMERATED {none(0), simple(1), strong(2),...},\n    localQualifier  INTEGER OPTIONAL,\n    signed          BOOLEAN DEFAULT FALSE,\n    ...},\n  other           EXTERNAL,\n  ... }\n\n")),(0,a.kt)("p",null,"Meerkat internally tracks each client's authentication level as a value of the\n",(0,a.kt)("inlineCode",{parentName:"p"},"basicLevels")," alternative shown above. The environment variables shown above\nare used to populate an ",(0,a.kt)("inlineCode",{parentName:"p"},"AuthenticationLevel")," to which the client's\n",(0,a.kt)("inlineCode",{parentName:"p"},"AuthenticationLevel")," is compared to determine whether they are permitted to\nreceive signed results or errors. You can tell what component of\n",(0,a.kt)("inlineCode",{parentName:"p"},"AuthenticationLevel.basicLevels")," each environment variable determines by their\nnames."),(0,a.kt)("p",null,"For example, this set of configuration options will require that, to receive\nauthenticated results or errors, a given user must have authenticated with\n",(0,a.kt)("em",{parentName:"p"},"at least")," a password (if not something stronger, such as strong\nauthentication), and they MUST be using TLSv1.3 (or higher), and they MUST have\nsigned their argument:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MEERKAT_LOCAL_QUALIFIER_POINTS_FOR_USING_TLS_1_3=128\nMEERKAT_SIGNING_MIN_AUTH_LEVEL=1\nMEERKAT_SIGNING_MIN_AUTH_LOCAL_QUALIFIER=128\nMEERKAT_SIGNING_MIN_AUTH_SIGNED=1\n")),(0,a.kt)("p",null,"By authenticating with a password (rather than anonymously or with no\ncredentials), a user will have an authentication level of 1. By using TLSv1.3 or\nhigher, the user will receive 128 ",(0,a.kt)("inlineCode",{parentName:"p"},"localQualifier")," points from this DSA, which\nmeans that this user meets the threshold of ",(0,a.kt)("inlineCode",{parentName:"p"},"localQualifier"),' "points." By\nsigning the argument, the user meets the signing requirement as well.'),(0,a.kt)("p",null,"You may want a different authentication level requirement for receiving signed\nerrors. You can do so by modifying these environment variables, which follow the\nsame semantics. These environment variables override the authentication level\nrequired for receiving signed results, if they are specified:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/directory/docs/env#meerkatsigningerrorsminauthlevel"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_ERRORS_MIN_AUTH_LEVEL"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/directory/docs/env#meerkatsigningerrorsminauthlocalqualifier"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_ERRORS_MIN_AUTH_LOCAL_QUALIFIER"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/directory/docs/env#meerkatsigningerrorsminauthsigned"},(0,a.kt)("inlineCode",{parentName:"a"},"MEERKAT_SIGNING_ERRORS_MIN_AUTH_SIGNED")))),(0,a.kt)("h2",{id:"how-to-request-signed-results-or-errors"},"How to Request Signed Results or Errors"),(0,a.kt)("p",null,"For all DAP operations, with the exception of the ",(0,a.kt)("inlineCode",{parentName:"p"},"abandon"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"changePassword"),",\nand ",(0,a.kt)("inlineCode",{parentName:"p"},"administerPassword")," operations, set the ",(0,a.kt)("inlineCode",{parentName:"p"},"securityParameters.target"),"\nproperty to ",(0,a.kt)("inlineCode",{parentName:"p"},"signed")," (value 1) to request signed results; set\n",(0,a.kt)("inlineCode",{parentName:"p"},"securityParameters.errorProtection")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"signed")," (value 1) to request signed\nerrors."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"abandon"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"changePassword"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"administerPassword")," operations do not have\n",(0,a.kt)("inlineCode",{parentName:"p"},"securityParameters"),", which is why signing cannot be requested with these\noperations.")),(0,a.kt)("h2",{id:"how-signing-affects-pagination-and-chaining"},"How Signing Affects Pagination and Chaining"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"This section only applies to ",(0,a.kt)("inlineCode",{parentName:"p"},"list")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"search")," operations.")),(0,a.kt)("p",null,"In Meerkat DSA, signing cannot be used with pagination and chaining. Pagination\nand chaining, together, mean that the results may contain digital signatures\nproduced by other DSAs that were produced over results returned by other DSAs."),(0,a.kt)("p",null,"There is no way to break these results into pages, nor sorting them, while\nretaining their digital signatures obtained from other DSAs; do so invalidates\nthe signatures. Therefore, signing and pagination are fundamentally at odds with\none another."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Rationale for this behavior:"),(0,a.kt)("p",{parentName:"admonition"},"Since the search and list results might be important, and since the expected\nbehavior in this case is not well-defined, Meerkat DSA will not\ninvalidate the digital signatures to provide the chained and paginated results,\nand will simply return an error when these conflicting options are chosen.")),(0,a.kt)("h2",{id:"signing-of-bind-results"},"Signing of Bind Results"),(0,a.kt)("p",null,"According to\n",(0,a.kt)("a",{parentName:"p",href:"https://www.itu.int/rec/T-REC-X.511/en"},"ITU Recommendation X.511 (2019)"),",\nSection 9.1.4, Bind errors can be signed if strong authentication or SPKM\nauthentication are used. Otherwise, Meerkat DSA will not sign bind errors or\nresults."),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("p",null,"Meerkat DSA has its own implementation of certificate path validation that is\nindependent of OpenSSL (out of necessity). This implementation has been tested\nagainst the\n",(0,a.kt)("a",{parentName:"p",href:"https://csrc.nist.gov/csrc/media/projects/pki-testing/documents/pkits.pdf"},"NIST PKITS"),",\nexcluding tests that relate to CRLs (both local and remote) and OCSP."),(0,a.kt)("p",null,"CRLs (both local and remote) and OCSP are believed to work, but have not been\ntested thoroughly."))}g.isMDXComponent=!0}}]);