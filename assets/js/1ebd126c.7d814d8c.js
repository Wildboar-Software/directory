"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6343],{1184:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var o=r(4041);const i={},t=o.createContext(i);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(t.Provider,{value:n},e.children)}},7166:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"x500cli","title":"The X.500 Command Line Interface","description":"Wildboar Software is working on an X.500 Command Line Interface (CLI). This will","source":"@site/docs/x500cli.md","sourceDirName":".","slug":"/x500cli","permalink":"/directory/docs/x500cli","draft":false,"unlisted":false,"editUrl":"https://github.com/Wildboar-Software/directory/edit/main/website/docs/x500cli.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Roadmap","permalink":"/directory/docs/roadmap"},"next":{"title":"X.500 Directory Libraries","permalink":"/directory/docs/libraries"}}');var i=r(1085),t=r(1184);const s={},a="The X.500 Command Line Interface",d={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Seeding Countries",id:"seeding-countries",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"the-x500-command-line-interface",children:"The X.500 Command Line Interface"})}),"\n",(0,i.jsxs)(n.p,{children:["Wildboar Software is working on an X.500 Command Line Interface (CLI). This will\r\nbe released as an NPM package named ",(0,i.jsx)(n.code,{children:"@wildboar/x500-cli"}),", which will install\r\nan executable called ",(0,i.jsx)(n.code,{children:"x500"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"With this tool, you will be able to run X.500 commands like so:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"x500 dap read 'c=US,st=FL,cn=Jonathan M. Wilbur' \\\r\n  --accessPoint=idm://dsa01.root.mkdemo.wildboar.software:4632\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"x500 dap add subentry 'C=US,CN=Test subentry 2' \\\r\n  --accessPoint=idm://dsa01.root.mkdemo.wildboar.software:4632 \\\r\n  --commonName='Test subentry 2' \\\r\n  -b 'st=CA' \\\r\n  -n 1 \\\r\n  -x 5 \\\r\n  -c 'l=Los Angeles' \\\r\n  -a 'l=Silicon Valley' \\\r\n  -r '{ item:2.5.6.7 }'\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The Wildboar X.500 command-line interface uses the standardized\r\n",(0,i.jsx)(n.a,{href:"/directory/docs/client-config",children:"X.500 client configuration file"})," defined by Wildboar\r\nSoftware."]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["Currently, this command can only be installed via ",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/",children:"NPM"}),",\r\nwhich you can get by installing ",(0,i.jsx)(n.a,{href:"https://nodejs.org/en/",children:"NodeJS"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Run ",(0,i.jsx)(n.code,{children:"npm install -g @wildboar/x500-cli"}),". If you get a permissions issue, you\r\nmay need to prefix your command with ",(0,i.jsx)(n.code,{children:"sudo"}),' on Unix-like systems or run this\r\ncommand in a terminal that is "ran as administrator" on Windows.']}),"\n",(0,i.jsxs)(n.p,{children:["If you get an error saying that the command ",(0,i.jsx)(n.code,{children:"x500"})," does not exist after you\r\nhave done this, you may need to close out of the terminal and open a new one."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["Run the command ",(0,i.jsx)(n.code,{children:"x500"})," from a terminal or pseudoterminal to see the subcommands\r\navailable. Currently, this output looks like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"x500 <command>\r\n\r\nCommands:\r\n  x500 dap                    Directory Access Protocol\r\n  x500 seed-countries <base>  seed directory with countries\r\n  x500 config                 Configuration\r\n\r\nOptions:\r\n  --version  Show version number                                                           [boolean]\r\n  --help     Show help                                                                     [boolean]\r\n\r\nNot enough non-option arguments: got 0, need at least 1\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In most cases, you want to use ",(0,i.jsx)(n.code,{children:"x500 dap"})," subcommands. Let's take a look at\r\nthose:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"x500 dap\r\n\r\nDirectory Access Protocol\r\n\r\nCommands:\r\n  x500 dap add                              Add an entry\r\n  x500 dap apw <object>                     Administer password\r\n  x500 dap cpw <object>                     Change password\r\n  x500 dap compare <object> <type> <value>  Compare an entry against an assertion\r\n  x500 dap list <object>                    List subordinates of an entry\r\n  x500 dap mod                              Modify an entry\r\n  x500 dap moddn <src> <dest>               Move/Rename an entry\r\n  x500 dap read <object>                    Read an entry\r\n  x500 dap remove <object>                  Remove an entry\r\n  x500 dap search <object> <subset>         Search\r\n\r\nOptions:\r\n      --version         Show version number                                                [boolean]\r\n      --help            Show help                                                          [boolean]\r\n  -D, --bindDN          The distinguished name with which to bind.                          [string]\r\n  -W, --password        The clear-text password. (Be careful. Your command history may be saved or\r\n                        logged.)                                                            [string]\r\n  -Y, --passwordFile    The path to a file containing the clear-text bind password, which does not\r\n                        have to be UTF-8 encoded.                                           [string]\r\n  -P, --promptPassword  Whether to interactively prompt for the bind password.             [boolean]\r\n  -H, --accessPoint     The URL of the access point. (Must start with idm:// or idms://.)   [string]\r\n  -Z, --noTLS           If TRUE, fails if TLS URL is used and prevents automatic StartTLS.\r\n                                                                          [boolean] [default: false]\r\n  -V, --verbose         Verbose output                                                     [boolean]\r\n\r\nNot enough non-option arguments: got 0, need at least 1\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Each of the above commands have additional options, which can be discovered by\r\nrunning those subcommands with the ",(0,i.jsx)(n.code,{children:"--help"})," flag (e.g. ",(0,i.jsx)(n.code,{children:"x500 dap add --help"}),")."]}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["The X.500 CLI comes with utilities for manipulating your\r\n",(0,i.jsx)(n.a,{href:"/directory/docs/client-config",children:"X.500 client configuration file"}),". Users of Kubernetes'\r\n",(0,i.jsx)(n.code,{children:"kubectl"})," will find the user experience familiar. A tutorial for setting up\r\nthis file can be found ",(0,i.jsx)(n.a,{href:"/directory/docs/tutorial01#configuration",children:"here"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Without setting up the ",(0,i.jsx)(n.a,{href:"/directory/docs/client-config",children:"X.500 client configuration file"}),",\r\nall operations will have to have the ",(0,i.jsx)(n.code,{children:"--accessPoint"})," option supplied in the\r\ncommand, as well as credentials (if used). In this sense, setting up this\r\nconfiguration file is optional, but it will quickly pay for itself by saving you\r\nfrom typing out the same options over and over again."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"It is gently recommended to use these commands to interact with your\r\nconfiguration file rather than editing it in a text editor, simply because these\r\ncommands abstract away the location, name, and format of the configuration file."})}),"\n",(0,i.jsx)(n.h2,{id:"seeding-countries",children:"Seeding Countries"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"x500 seed-countries"})," subcommand will seed your Meerkat DSA instance with\r\ncountries (entries of object class ",(0,i.jsx)(n.code,{children:"country"}),"). This is a common use case. Many\r\npeople will likely want the top level of their DSA to include entries for, say,\r\n",(0,i.jsx)(n.code,{children:"C=US"}),", ",(0,i.jsx)(n.code,{children:"C=DE"}),", ",(0,i.jsx)(n.code,{children:"C=RU"}),", etc."]}),"\n",(0,i.jsx)(n.p,{children:"In the future, there may be more seeding subcommands to assist with setting up\r\na directory service quickly."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);