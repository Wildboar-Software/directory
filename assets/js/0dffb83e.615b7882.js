"use strict";(self.webpackChunkdirectory=self.webpackChunkdirectory||[]).push([[5075],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=u(r),h=n,m=p["".concat(s,".").concat(h)]||p[h]||c[h]||i;return r?a.createElement(m,o(o({ref:t},d),{},{components:r})):a.createElement(m,o({ref:t},d))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var u=2;u<i;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},6736:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var a=r(7462),n=r(3366),i=(r(7294),r(3905)),o=["components"],l={},s="Roadmap",u={unversionedId:"roadmap",id:"roadmap",title:"Roadmap",description:"We will not promise any particular schedule of delivery of features or bug fixes",source:"@site/docs/roadmap.md",sourceDirName:".",slug:"/roadmap",permalink:"/directory/docs/roadmap",draft:!1,editUrl:"https://github.com/Wildboar-Software/directory/edit/main/website/docs/roadmap.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/directory/docs/architecture"},next:{title:"The X.500 Command Line Interface",permalink:"/directory/docs/x500cli"}},d={},c=[{value:"Version 1.2.0 - Schema Update (&quot;LDAP Parity&quot;)",id:"version-120---schema-update-ldap-parity",level:2},{value:"Version 1.3.0 - List Continuation Reference Procedures",id:"version-130---list-continuation-reference-procedures",level:2},{value:"Version 1.3.0 - ITOT",id:"version-130---itot",level:2},{value:"Version 1.4.0 - Schema Update (&quot;Wildboar Schema&quot;)",id:"version-140---schema-update-wildboar-schema",level:2},{value:"Version 1.5.0 - Password Administrative Areas",id:"version-150---password-administrative-areas",level:2},{value:"Version 1.6.0 - Service Administrative Areas",id:"version-160---service-administrative-areas",level:2},{value:"Version 1.7.0 - Shadowing",id:"version-170---shadowing",level:2},{value:"Version 1.8.0 and Beyond",id:"version-180-and-beyond",level:2},{value:"Integration, Scalability, and Security",id:"integration-scalability-and-security",level:2},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Enterprise Features",id:"enterprise-features",level:2},{value:"Never Will Support",id:"never-will-support",level:2}],p={toc:c};function h(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"roadmap"},"Roadmap"),(0,i.kt)("p",null,"We will not promise any particular schedule of delivery of features or bug fixes\nat this time. However, the very high-level roadmap for Meerkat DSA can be\nbroken down to the following versions."),(0,i.kt)("h2",{id:"version-120---schema-update-ldap-parity"},'Version 1.2.0 - Schema Update ("LDAP Parity")'),(0,i.kt)("p",null,"This update will introduce thousands of new attribute types, object classes,\nname forms, matching rules, and more, such that Meerkat DSA will achieve near\nfunctional parity with OpenLDAP, Apache Directory Server, OpenDJ, and other\npopular LDAP directories."),(0,i.kt)("p",null,"For instance, the popular LDAP object class, ",(0,i.kt)("inlineCode",{parentName:"p"},"inetOrgPerson"),", is defined in the\ndefault schema that comes with installations of OpenLDAP, but it is not present\nin the X.500 schema. In this release, we will convert the LDAP schema to the\nX.500 equivalents and support them in Meerkat DSA."),(0,i.kt)("h2",{id:"version-130---list-continuation-reference-procedures"},"Version 1.3.0 - List Continuation Reference Procedures"),(0,i.kt)("p",null,"This update will allow Meerkat DSA to chain the ",(0,i.kt)("inlineCode",{parentName:"p"},"list")," operation to return the\nimmediate subordinate entries under a given entry, even when those subordinates\nexist in other DSAs. This is a big deal, because currently, there is no way to\nlist remote subordinates."),(0,i.kt)("h2",{id:"version-130---itot"},"Version 1.3.0 - ITOT"),(0,i.kt)("p",null,"This update will introduce ISO Transport Over TCP (ITOT) as an alternative\nprotocol stack to Internet Directly-Mapped (IDM). The rationale for introducing\nthis above the many other more desirable features of X.500 directories is that\nolder X.500 directory software, such as Quipu, only uses ITOT. Therefore,\nsupporting ITOT transport in Meerkat DSA will allow integration with Quipu and\nother older X.500 DSAs and DUAs."),(0,i.kt)("h2",{id:"version-140---schema-update-wildboar-schema"},'Version 1.4.0 - Schema Update ("Wildboar Schema")'),(0,i.kt)("p",null,'This update will introduce thousands of new schema objects defined by Wildboar\nSoftware into the default schema. This is desirable so that X.500 directories\ncan build upon a common framework of mutually-understood schemata, rather than\n"re-inventing the wheel" each in isolation from each other. For instance, there\nmay be a desire for X.500 directories to store marital information about users,\nusing a ',(0,i.kt)("inlineCode",{parentName:"p"},"married")," auxiliary object class that permits the presence of a\n",(0,i.kt)("inlineCode",{parentName:"p"},"spouseDN")," attribute in an entry. It would be unfortunate for directory\nadministrators everywhere to define their own equivalent object classes, thereby\nduplicating work and reducing inter-domain compatibility."),(0,i.kt)("h2",{id:"version-150---password-administrative-areas"},"Version 1.5.0 - Password Administrative Areas"),(0,i.kt)("p",null,"This update will introduce support for X.500 Password Administrative Areas. This\nis a desirable feature early on, since one of the major uses for directories is\nin storing authentication information for people in an organization."),(0,i.kt)("h2",{id:"version-160---service-administrative-areas"},"Version 1.6.0 - Service Administrative Areas"),(0,i.kt)("p",null,"This update will introduce support for X.500 Service Administrative Areas."),(0,i.kt)("h2",{id:"version-170---shadowing"},"Version 1.7.0 - Shadowing"),(0,i.kt)("p",null,"This update will introduce support for the Directory Information Shadowing\nProtocol (DISP)."),(0,i.kt)("h2",{id:"version-180-and-beyond"},"Version 1.8.0 and Beyond"),(0,i.kt)("p",null,"Not much can be said about anything this far in the future. However, these\nfeatures need to be introduced at some point:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Cross References, allowing DSAs to share knowledge about other DSAs"),(0,i.kt)("li",{parentName:"ul"},"SASL Authentication, allowing alternative authentication mechanisms"),(0,i.kt)("li",{parentName:"ul"},"Rule-Based Access Control, allowing an alternative access control mechanism"),(0,i.kt)("li",{parentName:"ul"},"Search Continuation Procedure, allowing searches to return results from other DSAs"),(0,i.kt)("li",{parentName:"ul"},"Hierarchy Selections, allowing selection of hierarchically-related entries in a search operation")),(0,i.kt)("h2",{id:"integration-scalability-and-security"},"Integration, Scalability, and Security"),(0,i.kt)("p",null,"It is assumed that, after a few months or years of existence, there will be\nmany Meerkat DSA instances running, and much more data stored in DSAs. As such,\nit will be more important for Meerkat DSA to be scalable, secure, and capable\nof integration."),(0,i.kt)("p",null,"After extensive testing as an identity provider and private database, and\nparticularly after rigorous security testing, distributed operation will be\na primary focus of this phase."),(0,i.kt)("p",null,"Scalability will be a parameter of this phase; Meerkat DSA will be hardened\nagainst denial-of-service attacks, excessive resource consumption, and generally\nheavily tuned for performance."),(0,i.kt)("p",null,"It is expected that, before this is implemented, Quota Administrative Areas\nwill be implemented, which will be a new administrative area type defined by\nMeerkat DSA that rate-limits user activity."),(0,i.kt)("p",null,"Support for other databases may be added to help increase adoption."),(0,i.kt)("h2",{id:"advanced-features"},"Advanced Features"),(0,i.kt)("p",null,"After proving itself as a fully-featured, X.500-compliant DSA, Meerkat DSA will\ngain new features that make it even better than the directory service\nenvisioned by the X.500 specification authors. These advanced features are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"LDIF uploads"),(0,i.kt)("li",{parentName:"ul"},"ZeroMQ Transport"),(0,i.kt)("li",{parentName:"ul"},"Onion Routing"),(0,i.kt)("li",{parentName:"ul"},"Multiple Password Hashes"),(0,i.kt)("li",{parentName:"ul"},"OpenLDAP-like access control"),(0,i.kt)("li",{parentName:"ul"},"XML Encoding Rules (XER) Support"),(0,i.kt)("li",{parentName:"ul"},"Directory Service Markup Language (DSML) Support"),(0,i.kt)("li",{parentName:"ul"},"SCIM Support (Maybe)"),(0,i.kt)("li",{parentName:"ul"},"gRPC API"),(0,i.kt)("li",{parentName:"ul"},"LDAP-to-JSON API"),(0,i.kt)("li",{parentName:"ul"},"Storage Administrative Areas"),(0,i.kt)("li",{parentName:"ul"},"IPFS"),(0,i.kt)("li",{parentName:"ul"},"Blockchain Integration")),(0,i.kt)("h2",{id:"enterprise-features"},"Enterprise Features"),(0,i.kt)("p",null,"Yes, there will eventually be a paid version of Meerkat DSA."),(0,i.kt)("p",null,"This is not really a coherent phase, since enterprise features will be developed\nalongside all other phases, but enterprise users will have these features:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"SNMP Monitoring"),(0,i.kt)("li",{parentName:"ul"},"Analytic Extensions"),(0,i.kt)("li",{parentName:"ul"},"User Behavior Analytics"),(0,i.kt)("li",{parentName:"ul"},"Legal Hold"),(0,i.kt)("li",{parentName:"ul"},"Compliance Features"),(0,i.kt)("li",{parentName:"ul"},"Webhooks"),(0,i.kt)("li",{parentName:"ul"},"SMTP and SMS notifications"),(0,i.kt)("li",{parentName:"ul"},"Audit Logging"),(0,i.kt)("li",{parentName:"ul"},"Active Directory Integration"),(0,i.kt)("li",{parentName:"ul"},"PKI-related features",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Generate keypair and cert for an entry"),(0,i.kt)("li",{parentName:"ul"},"Generate attribute certificate for an entry"))),(0,i.kt)("li",{parentName:"ul"},"Automation")),(0,i.kt)("h2",{id:"never-will-support"},"Never Will Support"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"LDAP ",(0,i.kt)("inlineCode",{parentName:"li"},"matchedValues")," control, because it is a superset of the DAP\n",(0,i.kt)("inlineCode",{parentName:"li"},"matchedValuesOnly")," option."),(0,i.kt)("li",{parentName:"ul"},"Multi-stage SASL authentication mechanisms, because the specification does not\nmake it clear how the DSA is expected to return an intermediate SASL response.\nNote that the ",(0,i.kt)("inlineCode",{parentName:"li"},"credentials")," field of a ",(0,i.kt)("inlineCode",{parentName:"li"},"DirectoryBindResult")," is to\nauthenticate the DSA to the DUA, not to provide SASL continuation.")))}h.isMDXComponent=!0}}]);