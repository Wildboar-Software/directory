"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8960],{1184:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var n=r(4041);const i={},s=n.createContext(i);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(s.Provider,{value:t},e.children)}},1838:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"advice","title":"Advice","description":"- It is recommended that administrators prevent subentries from being read","source":"@site/docs/advice.md","sourceDirName":".","slug":"/advice","permalink":"/directory/docs/advice","draft":false,"unlisted":false,"editUrl":"https://github.com/Wildboar-Software/directory/edit/main/website/docs/advice.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Troubleshooting","permalink":"/directory/docs/troubleshooting"},"next":{"title":"Usage","permalink":"/directory/docs/usage"}}');var i=r(1085),s=r(1184);const a={},o="Advice",d={},c=[];function l(e){const t={a:"a",em:"em",h1:"h1",header:"header",li:"li",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"advice",children:"Advice"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"It is recommended that administrators prevent subentries from being read\r\nfrom non-administrative users entirely, especially access control\r\ninformation. It is possible to misconfigure access controls, and if users\r\nhave the ability to read access control information, it makes it easier for\r\nnefarious users to discover errors in access controls that they can exploit."}),"\n",(0,i.jsx)(t.li,{children:"In general, shallower DITs will outperform deeper DITs, and shallower DITs\r\nhave the added benefit of producing more human-friendly distinguished names."}),"\n",(0,i.jsxs)(t.li,{children:["Try to use a variety of distinguished types in object names (e.g. don't name\r\neverything using commonName). This helps Meerkat only perform equality\r\nmatching on entries that ",(0,i.jsx)(t.em,{children:"could"})," match."]}),"\n",(0,i.jsx)(t.li,{children:'It is recommended that, for attributes that have some implied "default" value\r\nand which are sensitive, all entries should have this attribute with the\r\ndefault value(s) so that information disclosure vulnerabilities that reveal\r\nthe mere presence of attributes cannot be used to determine their values.'}),"\n",(0,i.jsxs)(t.li,{children:["Ensure that your DSA is configured to chain operations to other DSAs using\r\nstrong authentication and TLS, so that the authentication level of chained\r\nrequests is not downgraded as documented\r\n",(0,i.jsx)(t.a,{href:"/directory/docs/distributed#restrictions-that-apply-to-both",children:"here"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:['It is strongly advised that you avoid using service administration anywhere in\r\nthe DIT except for "leaf" areas. See\r\n',(0,i.jsx)(t.a,{href:"/directory/docs/deviations-nuances#hidden-service-admin-areas",children:"this"}),' for more info. In\r\naddition to this problem, nothing in service administrative areas clearly\r\nindicates whether an entry has no subordinates in the result set because it\r\nwas a part of another service admin area or because it was truly a "leaf"\r\nentry. This can be unintuitive for directory users.']}),"\n",(0,i.jsx)(t.li,{children:"NHOBs should be avoided. There is almost no scenario in which it is preferable\r\nto let subordinate DSAs have uncoordinated competition over a subordinate\r\nnamespace. Performance will almost certainly be worse. In almost every case,\r\nnormal hierarchical operational bindings should be preferred."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);