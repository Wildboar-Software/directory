"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9074],{1184:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>o});var t=i(4041);const s={},r=t.createContext(s);function d(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(r.Provider,{value:n},e.children)}},9606:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"client-config","title":"X.500 Client Configuration File","description":"There can be a lot of options that go into performing a single X.500 directory","source":"@site/docs/client-config.md","sourceDirName":".","slug":"/client-config","permalink":"/directory/docs/client-config","draft":false,"unlisted":false,"editUrl":"https://github.com/Wildboar-Software/directory/edit/main/website/docs/client-config.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"X.500-Related Specifications","permalink":"/directory/docs/specs"},"next":{"title":"Changelog for Meerkat DSA","permalink":"/directory/docs/changelog-meerkat"}}');var s=i(1085),r=i(1184);const d={},o="X.500 Client Configuration File",c={},a=[{value:"Location",id:"location",level:2},{value:"File Serialization",id:"file-serialization",level:2},{value:"Versioning",id:"versioning",level:2},{value:"Values",id:"values",level:2},{value:"File Paths",id:"file-paths",level:3},{value:"Distinguished Names",id:"distinguished-names",level:3},{value:"Unique Naming",id:"unique-naming",level:3},{value:"Data Structure",id:"data-structure",level:2},{value:"Fields",id:"fields",level:3},{value:"Preferences",id:"preferences",level:3},{value:"Credentials",id:"credentials",level:3},{value:"Simple Credentials",id:"simple-credentials",level:4},{value:"Strong Credentials",id:"strong-credentials",level:4},{value:"SASL Credentials",id:"sasl-credentials",level:4},{value:"Creating and Editing",id:"creating-and-editing",level:2},{value:"Usage",id:"usage",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"x500-client-configuration-file",children:"X.500 Client Configuration File"})}),"\n",(0,s.jsx)(n.p,{children:"There can be a lot of options that go into performing a single X.500 directory\noperation through the command-line interface. For this reason, Wildboar Software\nhas defined a file for persisting directory configuration."}),"\n",(0,s.jsx)(n.h2,{id:"location",children:"Location"}),"\n",(0,s.jsxs)(n.p,{children:["Unless its location is changed via a command-line parameter, this file should be\nlocated in the user's home directory, in a folder called ",(0,s.jsx)(n.code,{children:".config"}),", and in a\nfile called ",(0,s.jsx)(n.code,{children:"directory.yaml"})," or ",(0,s.jsx)(n.code,{children:"directory.yml"})," or ",(0,s.jsx)(n.code,{children:"directory.json"}),". This is\ntrue whether the user is on Windows, Mac OS, Linux, or some other operating\nsystem that has a conception of a home directory. Where file systems are\ncase-sensitive, the file names should be lowercased, including the extensions."]}),"\n",(0,s.jsx)(n.h2,{id:"file-serialization",children:"File Serialization"}),"\n",(0,s.jsxs)(n.p,{children:["The X.500 configuration file should be serialized as YAML if its file name ends\nwith the extensions ",(0,s.jsx)(n.code,{children:".yaml"})," or ",(0,s.jsx)(n.code,{children:"yml"}),", and it should be serialized as JSON if\nits file name ends with the extension ",(0,s.jsx)(n.code,{children:".json"}),". Unless stated otherwise, the\nordering of elements within arrays MUST be preserved. The ordering of elements\nwithin objects SHOULD be preserved."]}),"\n",(0,s.jsx)(n.h2,{id:"versioning",children:"Versioning"}),"\n",(0,s.jsx)(n.p,{children:"The X.500 configuration file specification is exclusively managed by Wildboar\nSoftware. No other organizations shall claim to have defined a new version of\nthe X.500 configuration file format defined here, unless it is clear that\nWildboar Software has abandoned the specification and will never define a future\nversion."}),"\n",(0,s.jsxs)(n.p,{children:["Versioning follows ",(0,s.jsx)(n.a,{href:"https://semver.org/",children:"Semantic Versioning"}),", and the first,\nonly, and current version as of this time of writing is ",(0,s.jsx)(n.code,{children:"1.0.0"}),". This may be the\nonly version ever defined if it works perfectly for everybody's use cases."]}),"\n",(0,s.jsx)(n.h2,{id:"values",children:"Values"}),"\n",(0,s.jsx)(n.h3,{id:"file-paths",children:"File Paths"}),"\n",(0,s.jsx)(n.p,{children:"File paths should use forward slashes as the file path delimiter, and clients on\nsystems that do not use forward slashes (such as Windows) should still translate\nthese delimiters to the system-specific delimiters for use."}),"\n",(0,s.jsx)(n.h3,{id:"distinguished-names",children:"Distinguished Names"}),"\n",(0,s.jsxs)(n.p,{children:["Distinguished names shall be encoded as a string via the procedures in\n",(0,s.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc4514",children:"IETF RFC 4514"}),", but reversed so\nthat the relative distinguished name of the object immediately subordinate to\nthe root appears first."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:['In the X.500 specifications, distinguished names appear in order of decreasing\nproximity to the root DSE. In LDAP distinguished names, this is reversed. Even\nthough the configuration file uses the procedures for "stringifying" a\ndistinguished name for LDAP, no such reversal should take place. In other words,\n',(0,s.jsx)(n.code,{children:"c=US,st=FL,l=Tampa"})," would be correct and ",(0,s.jsx)(n.code,{children:"l=Tampa,st=FL,c=US"})," would be\nincorrect."]})}),"\n",(0,s.jsx)(n.h3,{id:"unique-naming",children:"Unique Naming"}),"\n",(0,s.jsxs)(n.p,{children:["Clients that edit the X.500 configuration file MUST ensure that all entries in\n",(0,s.jsx)(n.code,{children:".preference-profiles"}),", ",(0,s.jsx)(n.code,{children:".dsas"}),", ",(0,s.jsx)(n.code,{children:".credentials"}),", and ",(0,s.jsx)(n.code,{children:".contexts"})," have ",(0,s.jsx)(n.code,{children:"name"}),"\nfields that are unique (case-sensitive) for those objects within those arrays."]}),"\n",(0,s.jsx)(n.h2,{id:"data-structure",children:"Data Structure"}),"\n",(0,s.jsxs)(n.p,{children:["The format of the configuration file is inspired by the configuration file used\nby the Kubernetes command-line interface, ",(0,s.jsx)(n.code,{children:"kubectl"}),". If you have ever used this\nfile before, you should see some similarities. Let's start with the example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1.0.0\nkind: X500ClientConfig\nmetadata:\n  name: main\n  labels:\n    client: x500-cli\n  annotations:\n    author: Jonathan M. Wilbur\ncurrent-context: localdev\npreference-profiles:\n  - name: main\n    logLevel: debug\n    sizeLimit: 1000\n    timeLimit: 10\n    attributeSizeLimit: 1000\n    readOnly: false\n    disable-start-tls: false\ndsas:\n  - name: localdev\n    accessPoints:\n      - urls:\n          - idm://localhost:4632\n        category: master\n  - name: azure\n    accessPoints:\n      - urls:\n          - idm://20.62.238.5:4632\n        category: master\ncredentials:\n  - name: azure\n    credential:\n      type: simple\n      name: cn=admin\n      password:\n        unprotected: mypassword123\ncontexts:\n  - name: localdev\n    context:\n      dsa: localdev\n      preferences: main\n  - name: azure\n    context:\n      dsa: azure\n      preferences: main\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.p,{children:["The rationale for using a ",(0,s.jsx)(n.code,{children:"kubectl"})," configuration-like format is that:"]}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"It made sense to copy some existing popular technology for the sake of the\nuser's familiarity and ease of use."}),"\n",(0,s.jsxs)(n.li,{children:["There may have been a lot of trial-and-error and thought put into the\n",(0,s.jsx)(n.code,{children:"kubectl"})," configuration file format by Google when it designed the format. It\nwas my assumption that this file format was well thought-out (and it does\nseem to work pretty well for Kubernetes usage), so it made sense to copy it\nso Meerkat DSA could benefit from Google's refinement."]}),"\n"]})]}),"\n",(0,s.jsxs)(n.p,{children:["In a ",(0,s.jsx)(n.code,{children:"kubectl"})," configuration file, you define the clusters you know of, all\ncredentials you have for any of them, and then you define ",(0,s.jsx)(n.em,{children:"contexts"})," which are\ncombinations of said credentials and clusters. The X.500 configuration file\nworks the same way, but with different objects: an X.500 configuration context\nis a combination of a directory system agent (DSA), an optional credential, and\nan optional preferences profile. Contexts are identified by a case-sensitive\nname."]}),"\n",(0,s.jsx)(n.p,{children:'A DSA can be "composed" of multiple access\npoints, which may be masters or shadows. Each access point is associated with\nat least one URL; the ordering of these URLs is important and the client MUST\nattempt to reach each of these URLs in the order that they are given. A DSA is\nidentified by a case-sensitive name.'}),"\n",(0,s.jsx)(n.p,{children:"A preferences profile is a profile of... preferences. Rather than being\nuniversal across all contexts, profile preferences allow you to have apply\ndifferent preferences to different contexts. A preference profile is identified\nby a case-sensitive name."}),"\n",(0,s.jsx)(n.h3,{id:"fields",children:"Fields"}),"\n",(0,s.jsx)(n.p,{children:"Here is a breakdown of what each field means."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Usage / Meaning"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"apiVersion"})}),(0,s.jsxs)(n.td,{children:["The version of this configuration file format, always proceeded by ",(0,s.jsx)(n.code,{children:"v"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kind"})}),(0,s.jsxs)(n.td,{children:["Always ",(0,s.jsx)(n.code,{children:"X500ClientConfig"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"metadata"})}),(0,s.jsx)(n.td,{children:"An object containing metadata about the configuration file."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"current-context"})}),(0,s.jsx)(n.td,{children:"The case-sensitive name of the currently-selected context."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"preference-profiles"})}),(0,s.jsx)(n.td,{children:"An array of preference profiles. Ordering is not significant."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dsas"})}),(0,s.jsx)(n.td,{children:"An array of known Directory System Agents (DSAs). Ordering is not significant."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"credentials"})}),(0,s.jsx)(n.td,{children:"An array of credentials. Ordering is not significant."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"contexts"})}),(0,s.jsx)(n.td,{children:"An array of configuration contexts. Ordering is not significant."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dsas.*.name"})}),(0,s.jsx)(n.td,{children:"A case-sensitive name for a DSA only used within this configuration file."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dsas.*.aeTitle"})}),(0,s.jsx)(n.td,{children:"A conditionally case-sensitive distinguished name of the AE title of this DSA."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dsas.*.accessPoints"})}),(0,s.jsx)(n.td,{children:"An array of access points by which the DSA can be reached, in order of descending preference."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dsas.*.accessPoints.*.urls"})}),(0,s.jsx)(n.td,{children:"An array of URLs for accessing a given access point, listed in order of descending preference."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dsas.*.accessPoints.*.category"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"master"}),", ",(0,s.jsx)(n.code,{children:"shadow"}),", or ",(0,s.jsx)(n.code,{children:"writeableCopy"})," depending on what the DSA is."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dsas.*.tlsCertChain"})}),(0,s.jsx)(n.td,{children:"File path to the PEM-encoded TLS cert chain to use for TLS client authentication"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dsas.*.tlsKey"})}),(0,s.jsx)(n.td,{children:"File path to the PEM-encoded TLS key to use for TLS client authentication"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dsas.*.ca"})}),(0,s.jsx)(n.td,{children:"File path to the PEM-encoded certificate authorities to use for TLS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dsas.*.crl"})}),(0,s.jsx)(n.td,{children:"File path to the PEM-encoded certificate revocation lists to use for TLS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"credentials.*.name"})}),(0,s.jsx)(n.td,{children:"A case-sensitive name for a credential."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"credentials.*.credential"})}),(0,s.jsx)(n.td,{children:"The actual credential itself, which may take on multiple different forms."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"credentials.*.credential.type"})}),(0,s.jsxs)(n.td,{children:["The type discriminator for a credential. Usually ",(0,s.jsx)(n.code,{children:"simple"}),", ",(0,s.jsx)(n.code,{children:"strong"}),", or ",(0,s.jsx)(n.code,{children:"sasl"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"contexts.*.name"})}),(0,s.jsx)(n.td,{children:"The case-sensitive name of the context only used within this configuration file."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"contexts.*.context"})}),(0,s.jsx)(n.td,{children:"The context itself."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"contexts.*.context.dsa"})}),(0,s.jsx)(n.td,{children:"The name of the DSA for this context."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"contexts.*.context.credential"})}),(0,s.jsx)(n.td,{children:"The name of the credential for this context."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"contexts.*.context.preferences"})}),(0,s.jsx)(n.td,{children:"The name of the preferences profile for this context."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"preferences",children:"Preferences"}),"\n",(0,s.jsx)(n.p,{children:"Each preferences profile is a somewhat free-form object, except for the\nfollowing preferences. This list is subject to change. More preferences may be\nadded in future versions of this configuration."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Preference"}),(0,s.jsx)(n.th,{children:"Meaning"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"logLevel"})}),(0,s.jsxs)(n.td,{children:["The logging level of the client, which can be ",(0,s.jsx)(n.code,{children:"debug"}),", ",(0,s.jsx)(n.code,{children:"info"}),", ",(0,s.jsx)(n.code,{children:"warn"}),", ",(0,s.jsx)(n.code,{children:"error"}),", or ",(0,s.jsx)(n.code,{children:"silent"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"sizeLimit"})}),(0,s.jsxs)(n.td,{children:["A positive integer; the default ",(0,s.jsx)(n.code,{children:"sizeLimit"})," supplied in ",(0,s.jsx)(n.code,{children:"search"})," or ",(0,s.jsx)(n.code,{children:"list"})," operations."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"timeLimit"})}),(0,s.jsxs)(n.td,{children:["A positive integer; the default ",(0,s.jsx)(n.code,{children:"timeLimit"})," supplied in directory operations."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"attributeSizeLimit"})}),(0,s.jsxs)(n.td,{children:["A positive integer; the default ",(0,s.jsx)(n.code,{children:"attributeSizeLimit"})," supplied in directory operations."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"readOnly"})}),(0,s.jsx)(n.td,{children:"A boolean indicating whether no write operations should be permitted."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"disable-start-tls"})}),(0,s.jsx)(n.td,{children:"A boolean indicating whether the client should refrain from upgrading the connection security via StartTLS."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"callingAETitle"})}),(0,s.jsx)(n.td,{children:"The distinguished name of the calling application entity (AE) title, as used by IDM and ISO transports."})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Note that some preferences may be overridden by command-line arguments or other\noptions specified in a user interface. For instance, if the command explicitly\ncalls for a high size limit than is present in the preferences profile, this\nsize limit should prevail. In many cases, a preference setting exists only to\ndefine a sensible default."}),"\n",(0,s.jsx)(n.h3,{id:"credentials",children:"Credentials"}),"\n",(0,s.jsxs)(n.p,{children:["The type of credentials used is determined by the ",(0,s.jsx)(n.code,{children:"type"})," field of each\ncredential. Other than this field, the contents of a particular credential will\nvary depending on the type of credential."]}),"\n",(0,s.jsx)(n.h4,{id:"simple-credentials",children:"Simple Credentials"}),"\n",(0,s.jsxs)(n.p,{children:["When defining a credential of type ",(0,s.jsx)(n.code,{children:"simple"}),", the defined fields are ",(0,s.jsx)(n.code,{children:"name"})," and\n",(0,s.jsx)(n.code,{children:"password"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"name"})," is the distinguished name of the object to which the client shall bind."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"password"})," can take on two forms, each of which is an object, and the keys of\nthis object are used to determine the form. If the key ",(0,s.jsx)(n.code,{children:"unprotected"})," is used,\nthe password is stored in an unprotected form as a string as its value. If the\nkeys ",(0,s.jsx)(n.code,{children:"algorithmIdentifier"})," and ",(0,s.jsx)(n.code,{children:"hashValue"})," are used, then the password is\nstored in a hashed form. ",(0,s.jsx)(n.code,{children:"algorithmIdentifier"})," is an object with a single field:\n",(0,s.jsx)(n.code,{children:"algorithm"}),", which an array of positive integers of the object identifier of the\nhash algorithm used. ",(0,s.jsx)(n.code,{children:"hashValue"})," is the hexadecimal-encoded hash of the\npassword produced by the algorithm specified in ",(0,s.jsx)(n.code,{children:"algorithmIdentifier.algorithm"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"strong-credentials",children:"Strong Credentials"}),"\n",(0,s.jsxs)(n.p,{children:["When defining a credential of type ",(0,s.jsx)(n.code,{children:"simple"}),", the defined fields are ",(0,s.jsx)(n.code,{children:"name"}),",\n",(0,s.jsx)(n.code,{children:"keyPath"}),", ",(0,s.jsx)(n.code,{children:"certPath"}),", and ",(0,s.jsx)(n.code,{children:"attrCertPath"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"name"})," is the distinguished name of the object to which the client shall bind."]}),"\n",(0,s.jsx)(n.p,{children:"The other keys are all paths on the local file system."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"keyPath"})," is a path on the local filesystem to a PEM-encoded PKCS #8 formatted\nprivate key. Clients SHOULD also tolerate a binary PKCS #8 file, but this is not\nrequired."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"certPath"})," is a path on the local filesystem to a concatenation of PEM-encoded\nX.509 public key certificates in order of increasing proximity to the trusted\nroot."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"attrCertPath"})," is a path on the local filesystem to a concatenation of\nPEM-encoded X.509 attribute certificates in order of increasing proximity to the\ntrusted root."]}),"\n",(0,s.jsx)(n.h4,{id:"sasl-credentials",children:"SASL Credentials"}),"\n",(0,s.jsxs)(n.p,{children:["Credentials of type ",(0,s.jsx)(n.code,{children:"sasl"})," currently have an undefined syntax."]}),"\n",(0,s.jsx)(n.h2,{id:"creating-and-editing",children:"Creating and Editing"}),"\n",(0,s.jsxs)(n.p,{children:["X.500 clients may update the ",(0,s.jsx)(n.code,{children:"current-context"})," field of this file. Since there\nmay be multiple X.500 clients installed and used (even concurrently) on a\nsystem, there shall be no requirement for clients to use this field to determine\nwhich context they should use; client's MAY store the name of their\ncurrently-selected context elsewhere."]}),"\n",(0,s.jsx)(n.p,{children:"Consumers of this configuration file MUST NOT expect comments and other markup\nto be preserved. Programs MAY edit this file in a manner that creates, alters,\nor deletes comments, markup, and whitespace."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.p,{children:"When performing a non-modification operation, clients MAY attempt these\noperations on shadow or writeable copy access points from the list of access\npoints for a DSA, ignoring master access points entirely on a first pass, but\nclients SHOULD still prefer access points that appear prior in the array to\nthose that appear later."}),"\n",(0,s.jsxs)(n.p,{children:["Any other concern notwithstanding, clients SHOULD attempt to prevent\ntransmission of security-sensitive operations, such as ",(0,s.jsx)(n.code,{children:"changePassword"}),", over\nunencrypted transports, or to at least remind users that an insecure transport\nis in use."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);